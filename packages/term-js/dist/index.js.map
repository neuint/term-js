{"version":3,"file":"index.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../src/Term/Animation/index.ts","../src/Term/TemplateEngine/constants.ts","../src/Term/TemplateEngine/index.ts","../src/Term/VirtualizedList/index.ts","../../../general/utils/event.ts","../../../general/utils/string.ts","../src/Term/_constants/keyCodes.ts","../src/Term/_constants/strings.ts","../src/Term/_utils/viewport.ts","../../../general/utils/viewport.ts","../src/Term/BaseCaret/index.ts","../src/Term/SimpleCaret/index.ts","../src/Term/CaretFactory/index.ts","../src/Term/Line/constants/index.ts","../src/Term/_utils/string.ts","../src/Term/Line/Input/constants.ts","../src/Term/Line/Input/BaseInput/index.ts","../src/Term/Line/Input/ContentEditableInput/patterns.ts","../src/Term/Line/Input/ContentEditableInput/constants.ts","../src/Term/Line/Input/ContentEditableInput/index.ts","../src/Term/Line/Input/ViewableInput/index.ts","../src/Term/Line/Label/index.ts","../src/Term/Line/index.ts","../src/Term/_utils/array.ts","../src/Term/KeyboardShortcutsManager/index.ts","../src/Term/_events/ValueEvent.ts","../src/Term/_constants/events.ts","../src/Term/_events/ActionEvent.ts","../src/Term/PluginManager/index.ts","../src/Term/_events/CaretEvent.ts","../src/Term/_constants/browser.ts","../src/Term/PluginManager/constants.ts","../src/Term/PluginManager/Plugin/index.ts","../src/Term/index.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import IAnimation from './IAnimation';\n\nabstract class Animation implements IAnimation {\n  private static animationFrame?: ReturnType<typeof requestAnimationFrame>;\n\n  private static handlerList: (() => void)[] = [];\n\n  private static activateRequestAnimationFrame() {\n    if (!Animation.animationFrame) {\n      Animation.animationFrame = window\n        .requestAnimationFrame(Animation.requestAnimationFrameHandler);\n    }\n  }\n\n  private static deactivateRequestAnimationFrame() {\n    if (!Animation.handlerList.length) {\n      window.cancelAnimationFrame(Animation.animationFrame);\n    }\n  }\n\n  private static requestAnimationFrameHandler() {\n    Animation.handlerList.forEach((handler: () => void) => handler());\n    Animation.animationFrame = window\n      .requestAnimationFrame(Animation.requestAnimationFrameHandler);\n  }\n\n  protected frameHandler?: () => void;\n\n  protected constructor() {\n    Animation.activateRequestAnimationFrame();\n    this.registerFrameHandler();\n  }\n\n  public destroy() {\n    this.removeHandler();\n  }\n\n  protected registerFrameHandler() {\n    if (this.frameHandler) this.addHandler();\n  }\n\n  protected unregisterFrameHandler() {\n    if (this.frameHandler) this.removeHandler();\n  }\n\n  private addHandler() {\n    const { frameHandler } = this;\n    if (frameHandler) {\n      Animation.activateRequestAnimationFrame();\n      Animation.handlerList.push(frameHandler);\n    }\n  }\n\n  private removeHandler() {\n    const { handlerList } = Animation;\n    const { frameHandler } = this;\n    if (frameHandler && handlerList.includes(frameHandler)) {\n      const index = handlerList.indexOf(frameHandler);\n      handlerList.splice(index, 1);\n    }\n    Animation.deactivateRequestAnimationFrame();\n  }\n}\n\nexport default Animation;\n","export const CLASS_NAME_PATTERN = /class=\"[^\"]+\"/ig;\nexport const REF_PATTERN = /ref=\"[^\"]+\"/ig;\nexport const IF_OPEN_PATTERN = /<If\\scondition=\"\\{[^\"]+}\">/gi;\nexport const IF_CLOSE_PATTERN = /<\\/If>/gi;\nexport const CHOOSE_OPEN_PATTERN = /<Choose>/gi;\nexport const CHOOSE_CLOSE_PATTERN = /<\\/Choose>/gi;\nexport const CHOOSE_PATTERN = /<Choose>(.(?!\\/Choose>)|\\n(?!\\/Choose>)|\\s(?!\\/Choose>))+/gi;\nexport const WHEN_PATTERN = /<When\\scondition=\"\\{[^\"]+}\">(.(?!\\/When>)|\\n(?!\\/When>)|\\s(?!\\/When>))+/gi;\nexport const WHEN_OPEN_PATTERN = /<When\\scondition=\"\\{[^\"]+}\">/gi;\nexport const WHEN_CLOSE_PATTERN = /<\\/When>/gi;\nexport const OTHERWISE_PATTERN = /<Otherwise>(.(?!\\/Otherwise>)|\\n(?!\\/Otherwise>)|\\s(?!\\/Otherwise>))+/gi;\nexport const OTHERWISE_OPEN_PATTERN = /<Otherwise>/gi;\nexport const OTHERWISE_CLOSE_PATTERN = /<\\/Otherwise>/gi;\n","import { template as lodashTemplate, omit } from 'lodash-es';\n\nimport Animation from '../Animation';\nimport ITemplateEngine from './ITemplateEngine';\nimport {\n  IF_CLOSE_PATTERN,\n  IF_OPEN_PATTERN,\n  REF_PATTERN,\n  CHOOSE_OPEN_PATTERN,\n  CHOOSE_PATTERN,\n  CHOOSE_CLOSE_PATTERN,\n  WHEN_PATTERN,\n  OTHERWISE_PATTERN,\n  WHEN_CLOSE_PATTERN,\n  WHEN_OPEN_PATTERN,\n  OTHERWISE_OPEN_PATTERN,\n  OTHERWISE_CLOSE_PATTERN,\n  CLASS_NAME_PATTERN,\n} from './constants';\n\nclass TemplateEngine extends Animation implements ITemplateEngine {\n  private static getProxyChildNodes(renderString: string): NodeListOf<ChildNode> | ChildNode[] {\n    const proxyContainer = document.createElement('div');\n    const proxyChildNodes: ChildNode[] = [];\n    proxyContainer.innerHTML = renderString;\n    const { childNodes } = proxyContainer;\n    for (let i = 0, ln = childNodes.length; i < ln; i += 1) {\n      proxyChildNodes.push(childNodes[i]);\n    }\n    return proxyChildNodes;\n  }\n\n  private static insertAfter(container: HTMLElement, element: HTMLElement, ref: HTMLElement) {\n    const { childNodes } = container;\n    const index = Array.prototype.indexOf.call(childNodes, ref);\n    if (index < 0) return;\n    if (index === childNodes.length - 1) {\n      container.appendChild(element);\n    } else {\n      container.insertBefore(element, childNodes[index + 1]);\n    }\n  }\n\n  private static getRenderStringWithClassNames(renderString: string, params: {\n    css?: { [key: string]: string },\n    [p: string]: string | number | boolean | undefined | { [key: string]: string },\n  } = {}): string {\n    const { css } = params;\n    if (!css) return renderString;\n    const classNameStringList = renderString.match(CLASS_NAME_PATTERN);\n    if (!classNameStringList) return renderString;\n    return classNameStringList.reduce((acc: string, classNameString: string): string => {\n      const classNameList = classNameString.replace('class=\"', '').replace('\"', '').split(' ');\n      const replacedClassNameList = classNameList\n        .map((item: string): string => css[item] || item).join(' ');\n      const pattern = new RegExp(`class=\"${classNameList.join('\\\\s')}\"`);\n      return acc.replace(pattern, `class=\"${replacedClassNameList}\"`);\n    }, renderString);\n  }\n\n  private static getRenderStringWithVariables(renderString: string, params: {\n    css?: { [key: string]: string },\n    [p: string]: string | number | boolean | undefined | { [key: string]: string },\n  } = {}): string {\n    // eslint-disable-next-line no-param-reassign\n    delete params.css;\n    return Object.keys(params).reduce((acc: string, key: string): string => {\n      const pattern = new RegExp(`\\\\{${key}}`, 'g');\n      return acc.replace(pattern, params[key] as string);\n    }, renderString);\n  }\n\n  private static getTemplateExecutor(template: string): (params: { [k: string]: any }) => string {\n    let processedTemplate = TemplateEngine\n      .getTemplateExecutorStringWithLodashConditions(template);\n    processedTemplate = TemplateEngine\n      .getTemplateExecutorStringWithLodashSwitches(processedTemplate)\n      .replace(/\\s*%>[\\s\\n]*<%\\s*/g, ' ');\n    return lodashTemplate(processedTemplate);\n  }\n\n  private static getTemplateExecutorStringWithLodashConditions(template: string): string {\n    const conditionList = template.match(IF_OPEN_PATTERN);\n    if (!conditionList) return template;\n    return conditionList.reduce((acc: string, item: string) => {\n      const condition = item.replace(/^<If\\scondition=\"\\{/i, '').replace(/}\">$/, '');\n      return acc.replace(item, `<% if (${condition}) { %>`);\n    }, template).replace(IF_CLOSE_PATTERN, '<% } %>');\n  }\n\n  private static getTemplateExecutorStringWithLodashSwitches(template: string): string {\n    if (!CHOOSE_OPEN_PATTERN.test(template)) return template;\n    const chooseList = template.match(CHOOSE_PATTERN) || [];\n    return chooseList.reduce((acc: string, item) => {\n      return this.getTemplateExecutorStringWithLodashWhen(\n        acc, item.replace(/<Choose>[^<]*/i, ''),\n      );\n    }, template).replace(CHOOSE_OPEN_PATTERN, '').replace(CHOOSE_CLOSE_PATTERN, '');\n  }\n\n  private static getTemplateExecutorStringWithLodashWhen(\n    template: string, data: string,\n  ): string {\n    const whenList = data.match(WHEN_PATTERN) || [];\n    const otherwiseList = data.match(OTHERWISE_PATTERN) || [];\n    const processedString = whenList.reduce((acc: string, item, index) => {\n      const openBlockList = item.match(WHEN_OPEN_PATTERN);\n      if (!openBlockList) return acc;\n      const openBlock = openBlockList[0];\n      const condition = openBlock.replace(/^<When\\scondition=\"\\{/i, '').replace(/}\">$/, '');\n      const processedBlock = item.replace(openBlock, `<%${index ? ' else' : ''} if (${condition}) { %>`);\n      return acc.replace(item, processedBlock);\n    }, template).replace(WHEN_CLOSE_PATTERN, '<% } %>');\n    return otherwiseList.length === 1\n      ? otherwiseList.reduce((acc, item) => {\n        const processedBlock = item\n          .replace(OTHERWISE_OPEN_PATTERN, whenList.length ? '<% else {  %>' : '');\n        return acc.replace(item, processedBlock);\n      }, processedString).replace(OTHERWISE_CLOSE_PATTERN, whenList.length ? '<% } %>' : '')\n      : processedString;\n  }\n\n  private childNodesField?: NodeListOf<ChildNode> | ChildNode[] = [];\n\n  private get childNodes(): NodeListOf<ChildNode> | ChildNode[] | undefined {\n    return this.childNodesField;\n  }\n\n  private set childNodes(value: NodeListOf<ChildNode> | ChildNode[] | undefined) {\n    this.childNodesField = value;\n  }\n\n  public get nodeList(): NodeListOf<ChildNode> | ChildNode[] {\n    return this.childNodes || [];\n  }\n\n  private templateField = '';\n\n  private templateExecutor?: (params: { [k: string]: any }) => string;\n\n  protected isHidden = false;\n\n  public get template(): string {\n    return this.templateField;\n  }\n\n  public set template(value: string) {\n    this.templateExecutor = TemplateEngine.getTemplateExecutor(value);\n    this.templateField = value;\n  }\n\n  private containerField?: Element;\n\n  public get container(): Element | undefined {\n    return this.containerField;\n  }\n\n  public set container(value: Element | undefined) {\n    this.containerField = value;\n  }\n\n  constructor(template?: string, container?: Element) {\n    super();\n    if (template) this.template = template;\n    this.containerField = container || this.containerField;\n  }\n\n  public destroy() {\n    super.destroy();\n    const { container, childNodes } = this;\n    childNodes?.forEach((childNode: ChildNode) => {\n      container?.removeChild(childNode);\n    });\n  }\n\n  protected refMap: { [name: string]: Element | undefined } = {};\n\n  public show(append = true, ref?: ITemplateEngine | undefined) {\n    if (!this.isHidden) return;\n    this.isHidden = false;\n    const { container, childNodes } = this;\n    if (!container || !childNodes) return;\n    if (ref) {\n      this.addChildNodesWithRef(append, ref);\n    } else {\n      this.addChildNodesWithoutRef(append);\n    }\n  }\n\n  public hide() {\n    if (this.isHidden) return;\n    this.isHidden = true;\n    const { container, childNodes } = this;\n    if (container && childNodes) {\n      childNodes.forEach((childNode: ChildNode) => {\n        if (this.checkChildExists(childNode)) container.removeChild(childNode);\n      });\n    }\n  }\n\n  public getRefMap(): { [name: string]: Element | undefined } {\n    return { ...this.refMap };\n  }\n\n  public getRef(name: string): Element | undefined {\n    return this.refMap[name];\n  }\n\n  public render(\n    params?: {\n      css?: { [key: string]: string },\n      [p: string]: string | number | boolean | undefined | { [key: string]: string },\n    },\n    options?: {\n      replace?: ITemplateEngine,\n      ref?: ITemplateEngine,\n      append?: boolean,\n    },\n  ) {\n    const { container, template } = this;\n    if (!container || !template) return;\n    this.insertRenderString(this.getRenderString(params), options || {});\n    this.saveRefs();\n  }\n\n  protected getRenderString(params?: {\n    css?: { [key: string]: string },\n    [p: string]: string | number | boolean | undefined | { [key: string]: string },\n  }): string {\n    const { templateExecutor } = this;\n    if (!templateExecutor) return '';\n    let renderString = templateExecutor(omit(params, ['css']) as { [k: string]: any });\n    renderString = TemplateEngine.getRenderStringWithClassNames(renderString, params);\n    return TemplateEngine.getRenderStringWithVariables(renderString, params);\n  }\n\n  private saveRefs() {\n    const { container } = this;\n    const refs = this.template.match(REF_PATTERN);\n    this.refMap = refs ? refs.reduce((\n      acc: { [name: string]: Element | undefined }, item: string,\n    ): { [name: string]: Element | undefined } => {\n      const name = item.replace(/^ref=\"/, '').replace(/\"$/, '');\n      if (!name) return acc;\n      const element = container?.querySelector(`[ref=\"${name}\"]`);\n      if (!element) return acc;\n      element.removeAttribute('ref');\n      acc[name] = element;\n      return acc;\n    }, {}) : {};\n  }\n\n  private insertRenderString(\n    renderString: string,\n    options: {\n      replace?: ITemplateEngine,\n      ref?: ITemplateEngine,\n      append?: boolean,\n    },\n  ) {\n    const { replace, append = true, ref } = options;\n    if (replace) return this.replaceRenderString(renderString, replace);\n    if (ref) return this.addRenderStringWithRef(append, renderString, ref);\n    return this.addRenderStringWithoutRef(append, renderString);\n  }\n\n  private replaceRenderString(renderString: string, replace: ITemplateEngine) {\n    const container = this.container as Element;\n    const { childNodes } = container;\n    const proxyChildNodes = TemplateEngine.getProxyChildNodes(renderString);\n    const replaceNodeList = replace.nodeList;\n    if (!replaceNodeList || replaceNodeList.length !== proxyChildNodes.length) return;\n    proxyChildNodes.forEach((childNode: ChildNode, index: number) => {\n      const replaceItem = replaceNodeList[index];\n      if (replaceItem && Array.prototype.includes.call(childNodes, replaceItem)) {\n        container.replaceChild(childNode, replaceItem);\n      }\n    });\n    this.childNodes = proxyChildNodes;\n  }\n\n  private addRenderStringWithoutRef(append: boolean, renderString: string) {\n    this.childNodes = TemplateEngine.getProxyChildNodes(renderString);\n    this.addChildNodesWithoutRef(append);\n  }\n\n  private addChildNodesWithoutRef(append: boolean) {\n    const container = this.container as Element;\n    const childNodes = this.childNodes as ChildNode[];\n    const firstChild = container.firstChild as HTMLElement;\n    childNodes.forEach((childNode: ChildNode) => {\n      if (append) {\n        this.appendChild(childNode);\n      } else {\n        this.insertBefore(childNode, firstChild);\n      }\n    });\n    this.childNodes = childNodes;\n  }\n\n  private addRenderStringWithRef(append: boolean, renderString: string, ref: ITemplateEngine) {\n    this.childNodes = TemplateEngine.getProxyChildNodes(renderString);\n    this.addChildNodesWithRef(append, ref);\n  }\n\n  private addChildNodesWithRef(append: boolean, ref: ITemplateEngine) {\n    const childNodes = this.childNodes as ChildNode[];\n    const refNodeList = ref.nodeList;\n    if (!refNodeList?.length) return;\n    const refNode = (append ? refNodeList[refNodeList.length - 1] : refNodeList[0]) as HTMLElement;\n    (append ? Array.prototype.reverse.call(childNodes) : childNodes)\n      .forEach((childNode: ChildNode, index: number) => {\n        if (append) {\n          return index\n            ? this.insertBefore(childNode, childNodes[0])\n            : this.insertAfter(childNode, refNode);\n        }\n        return this.insertBefore(childNode, refNode);\n      });\n  }\n\n  private checkChildExists(childNode: ChildNode): boolean {\n    const { container } = this;\n    if (container) {\n      const containerChildNodes = container.childNodes;\n      return Array.prototype.includes.call(containerChildNodes, childNode);\n    }\n    return false;\n  }\n\n  private insertBefore(childNode: ChildNode, ref: ChildNode) {\n    const { container } = this;\n    if (container && this.checkChildExists(ref)) {\n      container.insertBefore(childNode, ref);\n    }\n  }\n\n  private insertAfter(childNode: ChildNode, ref: ChildNode) {\n    const { container } = this;\n    if (container && this.checkChildExists(ref)) {\n      TemplateEngine\n        .insertAfter(container as HTMLElement, childNode as HTMLElement, ref as HTMLElement);\n    }\n  }\n\n  private appendChild(childNode: ChildNode) {\n    const { container } = this;\n    if (container) container.appendChild(childNode);\n  }\n}\n\nexport default TemplateEngine;\n","import { isUndefined, last } from 'lodash-es';\n\nimport template from './template.html';\nimport css from './index.scss';\n\nimport IVirtualizedList from './IVirtualizedList';\nimport TemplateEngine from '../TemplateEngine';\nimport IVirtualizedItem from './IVirtualizedItem';\n\nclass VirtualizedList<T extends IVirtualizedItem<any>> extends TemplateEngine\n  implements IVirtualizedList<T> {\n  private lengthValue = 0;\n\n  public set length(value: number) {\n    this.lengthValue = value;\n    this.updateHeight();\n    this.renderViewportItems();\n  }\n\n  public get length(): number {\n    return this.lengthValue;\n  }\n\n  private scrollTimeout?: ReturnType<typeof setTimeout>;\n\n  private itemGetter: (\n    index: number,\n    params?: { container?: HTMLElement, ref?: T, append?: boolean },\n  ) => T | null;\n\n  private heightGetter: (index: number) => number;\n\n  private height = 0;\n\n  private readonly topOffset: number;\n\n  private readonly bottomOffset: number;\n\n  private itemsCache: { [key: number]: T } = {};\n\n  private viewportItems: number[] = [];\n\n  private renderedItems: number[] = [];\n\n  private offset = 0;\n\n  private restoreParams: {\n    index: number;\n    bottomOffset: number;\n    width: number;\n    height: number;\n  } = { index: -1, bottomOffset: -1, width: -1, height: -1 };\n\n  private static checkFullViewportItem(\n    params: {\n      viewportStart: number; viewportEnd: number; itemOffsetStart: number; itemOffsetEnd: number;\n    },\n  ): boolean {\n    const { viewportStart, viewportEnd, itemOffsetStart, itemOffsetEnd } = params;\n\n    return viewportStart <= itemOffsetStart && viewportEnd >= itemOffsetEnd;\n  }\n\n  private static checkViewportItem(\n    params: {\n      viewportStart: number; viewportEnd: number; itemOffsetStart: number; itemOffsetEnd: number;\n    },\n  ): boolean {\n    const { viewportStart, viewportEnd, itemOffsetStart, itemOffsetEnd } = params;\n\n    return (viewportStart <= itemOffsetStart && viewportEnd >= itemOffsetEnd)\n      || (viewportStart > itemOffsetStart && viewportStart < itemOffsetEnd)\n      || (viewportEnd > itemOffsetStart && viewportEnd < itemOffsetEnd);\n  }\n\n  constructor(\n    container: Element,\n    params: {\n      length: number;\n      itemGetter: (\n        index: number,\n        params?: { container?: HTMLElement, ref?: T, append?: boolean },\n      ) => T | null;\n      heightGetter: (index: number) => number;\n      topOffset?: number;\n      bottomOffset?: number;\n      className?: string;\n    },\n  ) {\n    super(template, container);\n    (window as unknown as { vl: IVirtualizedList<any> }).vl = this;\n    this.lengthValue = params.length;\n    this.itemGetter = params.itemGetter;\n    this.heightGetter = params.heightGetter;\n    this.topOffset = params.topOffset || this.topOffset;\n    this.bottomOffset = params.bottomOffset || this.bottomOffset;\n    this.render({\n      css: { ...css, className: params.className || '' },\n    });\n    this.renderViewportItems();\n    this.frameHandler = this.renderViewportItems;\n    this.registerFrameHandler();\n  }\n\n  public scrollBottom() {\n    if (!isUndefined(this.scrollTimeout)) clearTimeout(this.scrollTimeout);\n    const root = this.getRef('root') as HTMLElement;\n    if (!root) return;\n    this.scrollTimeout = setTimeout(() => {\n      root.scrollTop = root.scrollHeight - root.offsetHeight;\n    }, 0);\n  }\n\n  public destroy() {\n    if (!isUndefined(this.scrollTimeout)) clearTimeout(this.scrollTimeout);\n    super.destroy();\n  }\n\n  public getGeneralItemsContainer(): Element | undefined {\n    return this.getRef('generalList');\n  }\n\n  public getVirtualItemsContainer(): Element | undefined {\n    return this.getRef('itemsContainer');\n  }\n\n  public render(\n    params?: {\n      css?: { [p: string]: string };\n      [p: string]: string | number | boolean | { [p: string]: string } | undefined },\n  ) {\n    super.render(params);\n    this.updateHeight();\n  }\n\n  public updateViewport() {\n    this.removeAllItems();\n    this.updateHeight();\n    this.renderItems();\n  }\n\n  public clearCache() {\n    this.itemsCache = {};\n  }\n\n  private updateHeight() {\n    const { length, heightGetter } = this;\n    const virtualizedList = this.getRef('virtualizedList') as HTMLElement;\n    let height = 0;\n    for (let i = 0; i < length; i += 1) {\n      height += heightGetter(i);\n    }\n    if (this.height !== height) virtualizedList.style.height = `${height}px`;\n    this.height = height;\n  }\n\n  private renderViewportItems = () => {\n    const { length, heightGetter, topOffset, bottomOffset } = this;\n    const root = this.getRef('root') as HTMLElement;\n    if (!root) return;\n    this.restoreScrollTop();\n    const viewportStart = Math.max(root.scrollTop - topOffset, 0);\n    const visibleViewportEnd = viewportStart + root.offsetHeight + topOffset;\n    const viewportEnd = visibleViewportEnd + bottomOffset;\n    let itemOffsetStart = 0;\n    let itemOffsetEnd = 0;\n    let isFound = false;\n    let isVisibleFound = false;\n    let offset;\n    let lastItemOffset = 0;\n    let lastItemHeight = 0;\n    let lastItemIndex = -1;\n    let isVisibleLastNotFound = true;\n    const items = [];\n    for (let i = 0; i < length; i += 1) {\n      const itemHeight = heightGetter(i);\n      itemOffsetStart = itemOffsetEnd;\n      itemOffsetEnd = itemOffsetStart + itemHeight;\n      const isViewportItem = VirtualizedList.checkViewportItem({\n        viewportStart, viewportEnd, itemOffsetStart, itemOffsetEnd,\n      });\n      const isVisibleViewportItem = isVisibleLastNotFound ? VirtualizedList.checkFullViewportItem({\n        viewportStart, itemOffsetStart, itemOffsetEnd, viewportEnd: visibleViewportEnd,\n      }) : isVisibleLastNotFound;\n      isFound = isViewportItem || isFound;\n      isVisibleFound = isVisibleViewportItem || isVisibleFound;\n      if (isVisibleFound && !isVisibleViewportItem) isVisibleLastNotFound = false;\n      if (isVisibleLastNotFound) {\n        lastItemOffset += lastItemHeight;\n        lastItemHeight = itemHeight;\n        lastItemIndex = i;\n      }\n      if (isFound && !isViewportItem) break;\n      if (isViewportItem) {\n        items.push(i);\n        offset = isUndefined(offset) ? itemOffsetStart : offset;\n      }\n    }\n    this.viewportItems = items;\n    this.offset = offset || 0;\n    this.updateRestoreParams(lastItemIndex, lastItemOffset, lastItemHeight);\n    this.renderItems();\n  };\n\n  private renderItems() {\n    const { viewportItems, offset, renderedItems } = this;\n    const itemsContainer = this.getRef('itemsContainer') as HTMLElement;\n    const rerenderRequired = itemsContainer\n      && (viewportItems.length !== renderedItems.length\n      || renderedItems.some((index, i): boolean => index !== viewportItems[i]));\n    if (rerenderRequired) {\n      if (!viewportItems.length) this.removeAllItems();\n      this.removeStartItems();\n      this.removeEndItems();\n      viewportItems.forEach((index: number) => {\n        this.renderItem(index);\n      });\n      itemsContainer.style.top = `${Math.round(offset)}px`;\n    }\n  }\n\n  // TODO: simplify method\n  private renderItem(index: number) {\n    const { itemsCache, renderedItems, itemGetter } = this;\n    let beforeRenderArrayIndex = -1;\n    const beforeIndex = renderedItems.find((checkIndex: number, i: number): boolean => {\n      if (checkIndex > index) {\n        beforeRenderArrayIndex = i;\n        return true;\n      }\n      return false;\n    });\n    const container = this.getRef('itemsContainer') as HTMLElement;\n    if (!container) return;\n    if (isUndefined(beforeIndex)) {\n      if (itemsCache[index]) {\n        itemsCache[index].show();\n        if (!renderedItems.includes(index)) renderedItems.push(index);\n        return;\n      }\n      const item = itemGetter(index, { container });\n      if (item) itemsCache[index] = item;\n      if (!renderedItems.includes(index)) renderedItems.push(index);\n    } else {\n      const beforeCacheItem = itemsCache[beforeIndex];\n      const renderCacheItem = itemsCache[index];\n      if (!beforeCacheItem) return;\n      if (renderCacheItem) {\n        renderCacheItem.show(false, beforeCacheItem);\n        if (!renderedItems.includes(index)) renderedItems.splice(beforeRenderArrayIndex, 0, index);\n        return;\n      }\n      const item = itemGetter(index, { container, append: false, ref: beforeCacheItem });\n      if (item) itemsCache[index] = item;\n      if (!renderedItems.includes(index)) renderedItems.splice(beforeRenderArrayIndex, 0, index);\n    }\n  }\n\n  private removeStartItems() {\n    const { viewportItems, renderedItems } = this;\n    if (viewportItems.length) {\n      const firstItem = viewportItems[0];\n      let removeCount = 0;\n      renderedItems.some((itemIndex: number) => {\n        if (itemIndex >= firstItem) return true;\n        removeCount += 1;\n        this.removeItem(itemIndex);\n        return false;\n      });\n      renderedItems.splice(0, removeCount);\n    }\n  }\n\n  private removeEndItems() {\n    const { viewportItems, renderedItems } = this;\n    if (viewportItems.length) {\n      let removeCount = 0;\n      const lastItem = last(viewportItems) as number;\n      renderedItems.reverse().some((itemIndex: number) => {\n        if (itemIndex <= lastItem) return true;\n        removeCount += 1;\n        this.removeItem(itemIndex);\n        return false;\n      });\n      renderedItems.splice(0, removeCount);\n      renderedItems.reverse();\n    }\n  }\n\n  private removeAllItems() {\n    const { renderedItems } = this;\n    renderedItems.forEach((itemIndex: number) => this.removeItem(itemIndex));\n    this.renderedItems = [];\n  }\n\n  private removeItem(index: number) {\n    const { itemsCache } = this;\n    if (itemsCache[index]) itemsCache[index].hide();\n  }\n\n  private restoreScrollTop() {\n    const { index, height, width } = this.restoreParams;\n    if (index >= 0 && height >= 0 && width >= 0) this.updateScrollTop();\n  }\n\n  private updateScrollTop() {\n    const { length, heightGetter } = this;\n    const { width, index, bottomOffset } = this.restoreParams;\n    const root = this.getRef('root') as HTMLElement;\n    if (!root || width === root.offsetWidth) return;\n    const { offsetHeight } = root;\n    let itemOffset = 0;\n    let height = 0;\n    for (let i = 0; i < length; i += 1) {\n      if (i === index) {\n        height = heightGetter(i);\n        break;\n      } else {\n        itemOffset += heightGetter(i);\n      }\n    }\n    root.scrollTop = Math.max(0, itemOffset + height + bottomOffset - offsetHeight);\n  }\n\n  private updateRestoreParams(\n    lastItemIndex: number, lastItemOffset: number, lastItemHeight: number,\n  ) {\n    const root = this.getRef('root') as HTMLElement;\n    if (!root) return;\n    const { offsetHeight, offsetWidth, scrollTop } = root;\n    this.restoreParams = {\n      index: lastItemIndex,\n      width: offsetWidth,\n      height: offsetHeight,\n      bottomOffset: scrollTop + offsetHeight - lastItemOffset - lastItemHeight,\n    };\n  }\n}\n\nexport default VirtualizedList;\n","export const getKeyCode = (e: KeyboardEvent): number | null => e ? e.which || e.keyCode : null;\nexport const stopPropagation = (e: Event) => e.stopPropagation();\nexport const preventDefault = (e: Event) => e.preventDefault();\nexport const preventContextMenu = (e: MouseEvent): boolean => {\n  if (e.shiftKey) return false;\n  preventDefault(e);\n  return true;\n};\n","export const escapeString = (str: string): string => str\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;')\n  .replace(/'/g, '&#039;');\n\nexport const safeTemplate = (template: string, data: { [key: string]: string }) => Object.keys(data)\n  .reduce((\n    acc: string, key: string,\n  ) => acc.replace(new RegExp(`{${key}}`, 'g'), escapeString(data[key])), template);\n","export const ESC_CODE = 27;\nexport const ENTER_CODE = 13;\nexport const LEFT_CODE = 37;\nexport const RIGHT_CODE = 39;\nexport const UP_CODE = 38;\nexport const DOWN_CODE = 40;\nexport const BACKSPACE_CODE = 8;\nexport const TAB_CODE = 9;\nexport const K_CODE = 75;\n","export const DEFAULT_DELIMITER = '~';\nexport const NON_BREAKING_SPACE = '&nbsp;';\nexport const ZERO_WIDTH_SPACE = '&#x200b;';\n","import { SizeType } from '../types';\nimport { NON_BREAKING_SPACE } from '../_constants/strings';\n\nexport const getItemSize = (() => {\n  const cache = new Map<HTMLElement, HTMLElement>();\n\n  const addElement = (target: HTMLElement): HTMLElement => {\n    const cacheTextContainer = cache.get(target);\n    if (cacheTextContainer) return cacheTextContainer;\n    const textContainer = document.createElement('span');\n    textContainer.innerHTML = NON_BREAKING_SPACE;\n    textContainer.style.position = 'absolute';\n    textContainer.style.left = '0';\n    textContainer.style.top = '0';\n    textContainer.style.visibility = 'hidden';\n    textContainer.style.pointerEvents = 'none';\n    textContainer.style.userSelect = 'none';\n    target.appendChild(textContainer);\n    return textContainer;\n  };\n\n  return (container?: HTMLElement, save = false): SizeType => {\n    const target = container || document.body;\n    const textContainer = addElement(target);\n    const size = { width: textContainer.offsetWidth, height: textContainer.offsetHeight };\n    if (container && save) {\n      if (!cache.has(target)) cache.set(target, textContainer);\n      return size;\n    }\n    cache.delete(target);\n    target.removeChild(textContainer);\n    return size;\n  };\n})();\n\nexport const compareItemSize = (first: SizeType, second: SizeType): boolean => {\n  return first.width === second.width && first.height === second.height;\n};\n","export const getScrollbarSize = (container?: HTMLElement): number => {\n  let { size } = getScrollbarSize as { size?: number };\n  if (size) return size;\n  const target = container || document.body;\n  const div1: HTMLDivElement = document.createElement('div');\n  const div2: HTMLDivElement = document.createElement('div');\n  div1.style.width = '100px';\n  div1.style.height = '100px';\n  div1.style.overflow = 'scroll';\n  div2.style.height = '100px';\n  target.appendChild(div1);\n  div1.appendChild(div2);\n  size = div1.offsetWidth - div2.offsetWidth;\n  target.removeChild(div1);\n  (getScrollbarSize as { size?: number }).size = size;\n  return size;\n};\n\nexport const getRelativePosition = (\n  el: HTMLElement, container: HTMLElement,\n): { top: number; bottom: number; left: number; right: number; width: number; height: number } => {\n  const scrollBarSize = getScrollbarSize(container);\n  const elInfo = el.getBoundingClientRect();\n  const containerInfo = container.getBoundingClientRect();\n  const left = elInfo.left - containerInfo.left;\n  const top = elInfo.top - containerInfo.top;\n  const containerWidth = containerInfo.width - scrollBarSize;\n  const containerHeight = containerInfo.height - scrollBarSize;\n  return {\n    left,\n    top,\n    bottom: containerHeight - top - elInfo.height,\n    right: containerWidth - left - elInfo.width,\n    width: elInfo.width,\n    height: elInfo.height,\n  };\n};\n","import TemplateEngine from '../TemplateEngine';\nimport ICaret from './ICaret';\n\nabstract class BaseCaret extends TemplateEngine implements ICaret {\n  protected value = '';\n\n  protected prevLock = false;\n\n  private lockField = false;\n\n  public get lock(): boolean {\n    return this.lockField;\n  }\n\n  public set lock(value: boolean) {\n    this.lockField = value;\n    this.updateStyles();\n  }\n\n  protected prevBusy = false;\n\n  private busyField = false;\n\n  public get busy(): boolean {\n    return this.busyField;\n  }\n\n  public set busy(value: boolean) {\n    this.busyField = value;\n    this.updateStyles();\n  }\n\n  protected prevHidden = false;\n\n  private hiddenField = false;\n\n  public get hidden(): boolean {\n    return this.hiddenField;\n  }\n\n  public set hidden(value: boolean) {\n    this.hiddenField = value;\n    this.updateStyles();\n  }\n\n  private left = 0;\n\n  private prevLeft = 0;\n\n  private top = 0;\n\n  private prevTop = 0;\n\n  public setPosition(left: number, top: number) {\n    this.left = left;\n    this.top = top;\n    this.updateStyles();\n  }\n\n  protected abstract updateLockStyles(): void;\n\n  protected abstract updateBusyStyles(): void;\n\n  protected abstract updateHiddenStyles(): void;\n\n  public abstract setValue(value: string): void;\n\n  private updateStyles() {\n    const { lock, busy, hidden, left, prevLeft, top, prevTop } = this;\n    const root = this.getRef('root') as HTMLElement;\n    if (!root) return;\n    if (left !== prevLeft) root.style.left = `${left}px`;\n    if (top !== prevTop) root.style.top = `${top}px`;\n    this.updateLockStyles();\n    this.updateBusyStyles();\n    this.updateHiddenStyles();\n    this.prevLeft = left;\n    this.prevTop = top;\n    this.prevLock = lock;\n    this.prevBusy = busy;\n    this.prevHidden = hidden;\n  }\n}\n\nexport default BaseCaret;\n","import BaseCaret from '../BaseCaret';\nimport ICaret from '../BaseCaret/ICaret';\n\nimport SimpleCaretTemplate from './template.html';\n\nimport css from './index.scss';\n\nclass SimpleCaret extends BaseCaret implements ICaret {\n  constructor(container: Element) {\n    super(SimpleCaretTemplate, container);\n    this.render({ css });\n  }\n\n  protected updateLockStyles() {\n    const root = this.getRef('root') as HTMLElement;\n    const { lock, prevLock } = this;\n    if (!root || lock === prevLock) return;\n    if (lock) {\n      root.classList.add(css.lock);\n    } else {\n      root.classList.remove(css.lock);\n    }\n  }\n\n  protected updateBusyStyles() {\n    const root = this.getRef('root') as HTMLElement;\n    const { busy, prevBusy } = this;\n    if (!root || busy === prevBusy) return;\n    if (busy) {\n      root.classList.add(css.busy);\n    } else {\n      root.classList.remove(css.busy);\n    }\n  }\n\n  protected updateHiddenStyles() {\n    const root = this.getRef('root') as HTMLElement;\n    const { hidden, prevHidden } = this;\n    if (!root || hidden === prevHidden) return;\n    if (hidden) {\n      root.classList.add(css.hidden);\n    } else {\n      root.classList.remove(css.hidden);\n    }\n  }\n\n  public setValue(value: string) {\n    const character = this.getRef('character');\n    if (character && this.value !== value) {\n      this.value = value;\n      character.innerHTML = value;\n    }\n  }\n}\n\nexport default SimpleCaret;\n","import ICaretFactory from './ICaretFactory';\nimport SimpleCaret from '../SimpleCaret';\nimport ICaret from '../BaseCaret/ICaret';\n\nclass CaretFactory implements ICaretFactory {\n  private static instance: CaretFactory;\n\n  private static caretMap: { [name: string]: new (container: Element) => ICaret } = {\n    simple: SimpleCaret,\n  };\n\n  public static registerCaret(name: string, caret: new (container: Element) => ICaret) {\n    CaretFactory.caretMap[name] = caret;\n  }\n\n  // eslint-disable-next-line no-useless-constructor,@typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public static getInstance(): CaretFactory {\n    if (!CaretFactory.instance) CaretFactory.instance = new CaretFactory();\n\n    return CaretFactory.instance;\n  }\n\n  // TODO: to functional implementation\n  // eslint-disable-next-line class-methods-use-this\n  public create(name: string, container: Element): ICaret | null {\n    return CaretFactory.caretMap[name]\n      ? new CaretFactory.caretMap[name](container) : null;\n  }\n}\n\nexport default CaretFactory;\n","export const LOCK_TIMEOUT = 600;\n","export const getStartIntersectionString = (\n  main: string, target: string,\n): { str: string, isFull: boolean } => {\n  if (target.indexOf(main) === 0) return { str: main, isFull: true };\n  if (main[0] !== target[0]) return { str: '', isFull: false };\n  let startIntersectionString = main[0];\n  for (let i = 1, ln = main.length; i < ln; i += 1) {\n    const character = main[i];\n    if (character === target[i]) {\n      startIntersectionString += character;\n    } else {\n      break;\n    }\n  }\n  return { str: startIntersectionString, isFull: false };\n};\n\nexport const clearStringStyles = (str: string): string => str\n  .replace(/<span[^>]*>/g, '')\n  .replace(/<\\/span>/g, '');\n","export const DATA_INDEX_ATTRIBUTE_NAME = 'data-index';\nexport const SECRET_CHARACTER = '•';\n","import { isString } from 'lodash-es';\n\nimport css from './index.scss';\n\nimport TemplateEngine from '../../../TemplateEngine';\nimport IInput from '../IInput';\nimport {\n  FormattedValueFragmentType,\n  FormattedValueType,\n  ValueFragmentType,\n  ValueType,\n} from '../../../types';\nimport { NON_BREAKING_SPACE } from '../../../_constants/strings';\nimport { clearStringStyles, getStartIntersectionString } from '../../../_utils/string';\nimport {\n  DATA_INDEX_ATTRIBUTE_NAME, SECRET_CHARACTER,\n} from '../constants';\nimport { escapeString } from '../../../../../../../general/utils/string';\n\nabstract class BaseInput extends TemplateEngine implements IInput {\n  public static getValueString(value: ValueType, params: { secret?: boolean } = {}): string {\n    const { secret = false } = params;\n    if (isString(value)) return secret ? BaseInput.convertSecret(value) : value;\n    return <string>value.reduce((acc: string, item: ValueFragmentType): string => {\n      const str = (isString(item) ? item : item.str) as string;\n      const val = secret && (isString(item) || !item.lock) ? BaseInput.convertSecret(str) : str;\n      return `${acc}${val}`;\n    }, '');\n  }\n\n  protected static getFragmentTemplate(\n    str: string,\n    params: { className?: string; index: number; secret?: boolean },\n  ): string {\n    const { className = '', secret = false, index } = params;\n    const composedClassName = [secret ? css.secret : '', className].join(' ');\n    const processedString = BaseInput.getNormalizedTemplateString(secret\n      ? BaseInput.convertSecret(str) : str);\n    return `<span\n      ${DATA_INDEX_ATTRIBUTE_NAME}=\"${index}\"\n      ref=\"fragment-${index}\"\n      class=\"${composedClassName}\">${processedString}</span>`;\n  }\n\n  protected static getNormalizedTemplateString(str: string): string {\n    return escapeString(str).replace(/\\s/g, NON_BREAKING_SPACE);\n  }\n\n  protected static getValueFragmentTemplate(\n    valueFragment: ValueFragmentType, index: number, params: { secret?: boolean } = {},\n  ): string {\n    const { secret } = params;\n    if (isString(valueFragment)) {\n      return BaseInput.getFragmentTemplate(valueFragment, { index, secret });\n    }\n    const { str, className = '', lock } = valueFragment;\n    const isSecret = !lock && secret;\n    return BaseInput.getFragmentTemplate(str, { className, index, secret: isSecret });\n  }\n\n  protected static getValueTemplate(value: ValueType, params: { secret?: boolean } = {}): string {\n    if (isString(value)) return BaseInput.getNormalizedTemplateString(value);\n    return <string>value.reduce((acc: string, item: ValueFragmentType, index: number): string => {\n      return `${acc}${BaseInput.getValueFragmentTemplate(item, index, params)}`;\n    }, '');\n  }\n\n  protected static getUpdatedValueField(value: string, prevValue: ValueType): ValueType {\n    if (isString(prevValue)) return value;\n    let checkValue = clearStringStyles(value);\n    let stop = false;\n    const updatedValueField = prevValue.reduce((\n      acc: FormattedValueType, item: ValueFragmentType,\n    ): FormattedValueType => {\n      const isStringItem = isString(item);\n      const itemStr = (isStringItem ? item : (item as FormattedValueFragmentType).str) as string;\n      const { str, isFull } = getStartIntersectionString(itemStr, checkValue);\n      if (str && !stop) {\n        acc.push(isStringItem ? str : { ...(item as FormattedValueFragmentType), str });\n        checkValue = checkValue.substring(str.length);\n        stop = !isFull;\n      }\n      return acc;\n    }, [] as FormattedValueType);\n    checkValue.replace(/<span[^>]*>/g, '')\n      .split('')\n      .forEach((char) => updatedValueField.push(char));\n    return updatedValueField.filter((item) => (isString(item) ? item : item.str));\n  }\n\n  protected static getLockString(value: ValueType): string {\n    if (isString(value)) return '';\n    let str = '';\n    let lockStr = '';\n    value.forEach((item: ValueFragmentType) => {\n      if (isString(item)) {\n        str += item;\n      } else {\n        str += item.str;\n        if (item.lock) lockStr = str;\n      }\n    });\n    return lockStr;\n  }\n\n  private static convertSecret(str: string): string {\n    return (new Array(str.length)).fill(SECRET_CHARACTER).join('');\n  }\n\n  protected characterWidth = 8;\n\n  protected characterHeight = 16;\n\n  public get characterSize(): { width: number; height: number } {\n    const { characterContainer } = this;\n    return characterContainer\n      ? { width: characterContainer.offsetWidth, height: characterContainer.offsetHeight }\n      : { width: this.characterWidth, height: this.characterHeight };\n  }\n\n  // TODO: convert to abstract\n  // eslint-disable-next-line class-methods-use-this\n  public get caretPosition(): number {\n    return -1;\n  }\n\n  // TODO: convert to abstract\n  // eslint-disable-next-line class-methods-use-this\n  public get selectedRange(): { from: number; to: number } {\n    return { from: 0, to: 0 };\n  }\n\n  // TODO: convert to abstract\n  // eslint-disable-next-line class-methods-use-this\n  public get disabled(): boolean {\n    return true;\n  }\n\n  protected valueField: ValueType = '';\n\n  public get value(): ValueType {\n    return this.valueField;\n  }\n\n  public set value(val: ValueType) {\n    this.valueField = val;\n  }\n\n  public get lockString(): string {\n    const { valueField } = this;\n    return BaseInput.getLockString(valueField);\n  }\n\n  protected isCaretHidden = false;\n\n  public get hiddenCaret(): boolean {\n    return this.isCaretHidden;\n  }\n\n  public set hiddenCaret(isCaretHidden: boolean) {\n    this.isCaretHidden = isCaretHidden;\n  }\n\n  protected secretField = false;\n\n  public get secret(): boolean {\n    return this.secretField;\n  }\n\n  public set secret(secret: boolean) {\n    this.secretField = secret;\n  }\n\n  public get isFocused(): boolean {\n    const { activeElement } = document;\n    const root = this.getRef('input');\n    return activeElement === root\n      || activeElement?.parentNode === root\n      || activeElement?.parentNode === root;\n  }\n\n  private characterContainer?: HTMLElement;\n\n  protected constructor(\n    template: string, container?: Element, cssData?: { [key: string]: string },\n  ) {\n    super(template, container);\n    this.render({ css: cssData });\n    this.setCharacterContainer();\n    this.addHandlers();\n  }\n\n  protected addHandlers() {\n    const root = this.getRootElement();\n    if (root) {\n      root.addEventListener('click', this.clickHandler);\n      root.addEventListener('mousedown', this.mouseDownHandler);\n    }\n  }\n\n  protected removeHandlers() {\n    const root = this.getRootElement();\n    if (root) {\n      root.removeEventListener('click', this.clickHandler);\n      root.removeEventListener('mousedown', this.mouseDownHandler);\n    }\n  }\n\n  protected mouseDownHandler = (e: Event) => {\n    const valueFieldItem = this.getEventFormattedValueFragment(e);\n    if (valueFieldItem && valueFieldItem.clickHandler && valueFieldItem.lock) {\n      e.preventDefault();\n    }\n  };\n\n  protected clickHandler = (e: Event) => {\n    const valueFieldItem = this.getEventFormattedValueFragment(e);\n    if (valueFieldItem && valueFieldItem.clickHandler) {\n      valueFieldItem.clickHandler(e, valueFieldItem.id);\n    }\n  };\n\n  protected getValueItemString(index: number): string {\n    const { valueField } = this;\n    if (isString(valueField)) return index ? '' : valueField;\n    const item = valueField[index];\n    if (!item) return '';\n    return isString(item) ? item : item.str;\n  }\n\n  protected abstract getRootElement(): Element | undefined;\n\n  public getSimpleValue(showSecret = true): string {\n    const { secretField } = this;\n    return BaseInput.getValueString(this.valueField, { secret: secretField && !showSecret });\n  }\n\n  // TODO: convert to abstract\n  // eslint-disable-next-line class-methods-use-this,@typescript-eslint/no-empty-function\n  public moveCaretToEnd(isForce = false) {}\n\n  public addEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ) {\n    const root = this.getRef('input') as HTMLElement;\n    if (root) root.addEventListener(type, listener, options);\n  }\n\n  public removeEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ) {\n    const root = this.getRef('input') as HTMLElement;\n    if (root) root.removeEventListener(type, listener, options);\n  }\n\n  public focus() {\n    const root = this.getRef('input') as HTMLElement;\n    if (root) root.focus();\n  }\n\n  public blur() {\n    const root = this.getRef('input') as HTMLElement;\n    if (root) root.blur();\n  }\n\n  public destroy() {\n    this.removeHandlers();\n    super.destroy();\n  }\n\n  public getCaretOffset(): { left: number; top: number } {\n    const { caretPosition, characterSize } = this;\n    const rowCharactersCount = this.getRowCharactersCount();\n    if (!rowCharactersCount) return { left: 0, top: 0 };\n    const row = Math.floor(caretPosition / rowCharactersCount);\n    const relativePosition = caretPosition - row * rowCharactersCount;\n    return {\n      left: relativePosition * characterSize.width,\n      top: row * characterSize.height,\n    };\n  }\n\n  public getEndOffset(): { left: number; top: number } {\n    const { characterSize, valueField } = this;\n    const rowCharactersCount = this.getRowCharactersCount();\n    if (!rowCharactersCount) return { left: 0, top: 0 };\n    const charactersCount = BaseInput.getValueString(valueField).length;\n    const row = Math.floor(charactersCount / rowCharactersCount);\n    const relativePosition = charactersCount - row * rowCharactersCount;\n    return {\n      left: relativePosition * characterSize.width,\n      top: row * characterSize.height,\n    };\n  }\n\n  private getRowCharactersCount(): number {\n    const { characterSize } = this;\n    const root = this.getRef('input');\n    return root ? Math.floor((root as HTMLElement).offsetWidth / characterSize.width) : 0;\n  }\n\n  private getEventFormattedValueFragment(e: Event): FormattedValueFragmentType | null {\n    const target = e.target as Element;\n    if (!target) return null;\n    return this.getElementFormattedValueFragment(target);\n  }\n\n  private getElementFormattedValueFragment(element: Element): FormattedValueFragmentType | null {\n    const { valueField } = this;\n    if (isString(valueField)) return null;\n    const dataIndex = element.getAttribute(DATA_INDEX_ATTRIBUTE_NAME);\n    const valueFieldItem = dataIndex ? valueField[Number(dataIndex)] : null;\n    return !valueFieldItem || isString(valueFieldItem)\n      ? null : valueFieldItem as FormattedValueFragmentType;\n  }\n\n  private setCharacterContainer() {\n    const root = this.getRef('root');\n    if (root) {\n      const characterContainer = document.createElement('span');\n      characterContainer.style.position = 'absolute';\n      characterContainer.style.visibility = 'hidden';\n      characterContainer.style.pointerEvents = 'none';\n      characterContainer.style.left = '0';\n      characterContainer.style.top = '0';\n      characterContainer.innerHTML = NON_BREAKING_SPACE;\n      (root as HTMLElement).appendChild(characterContainer);\n      this.characterContainer = characterContainer;\n    }\n  }\n}\n\nexport default BaseInput;\n","export const NON_BREAKING_SPACE_PATTERN = /&nbsp;/g;\n","export const TEXT_NODE_TYPE = 3;\nexport const CHANGE_EVENT_TYPE = 'change';\n","import { identity, isString, isUndefined, unescape } from 'lodash-es';\n\nimport template from './template.html';\nimport css from './index.scss';\n\nimport IInput from '../IInput';\nimport { FormattedValueType, ValueFragmentType, ValueType } from '../../../types';\nimport BaseInput from '../BaseInput';\nimport { NON_BREAKING_SPACE_PATTERN } from './patterns';\nimport { CHANGE_EVENT_TYPE, TEXT_NODE_TYPE } from './constants';\nimport { SECRET_CHARACTER } from '../constants';\nimport { clearStringStyles } from '../../../_utils/string';\n\nclass ContentEditableInput extends BaseInput implements IInput {\n  private static getStyledValueTemplate(val: ValueType, params: { secret?: boolean } = {}): string {\n    return BaseInput.getValueTemplate(val, params);\n  }\n\n  private static getLastTextNode(root: HTMLElement): Node | null {\n    const { lastChild } = root;\n    if (!lastChild) return null;\n    if (lastChild.nodeType === TEXT_NODE_TYPE) return lastChild;\n    return ContentEditableInput.getLastTextNode(lastChild as HTMLElement);\n  }\n\n  private static checkChildNode(root: HTMLElement, checkNode: HTMLElement | Node): boolean {\n    if (root === checkNode) return true;\n    const { parentNode } = checkNode;\n    return parentNode ? ContentEditableInput.checkChildNode(root, parentNode) : false;\n  }\n\n  private static getHtmlStringifyValue(html: string): string {\n    return html.replace(NON_BREAKING_SPACE_PATTERN, ' ');\n  }\n\n  private static getNodeOffset(\n    root: HTMLElement, target: HTMLElement | Node, baseOffset = 0,\n  ): number {\n    const { parentNode } = target;\n    if (!parentNode || root === target) return 0;\n    let isFound = false;\n    const prevNodes = Array.prototype.filter.call(parentNode.childNodes, (\n      childNode: HTMLElement | Node,\n    ): boolean => {\n      const isTarget = childNode === target;\n      if (isTarget && !isFound) isFound = true;\n      return !isTarget && !isFound;\n    });\n    const offset = prevNodes.reduce((acc: number, node: HTMLElement | Node): number => {\n      const value = node.nodeType === TEXT_NODE_TYPE\n        ? node.nodeValue\n        : ContentEditableInput.getHtmlStringifyValue((node as HTMLElement).innerHTML);\n      return acc + (value ? value.length : 0);\n    }, 0);\n    return root === parentNode\n      ? baseOffset + offset\n      : ContentEditableInput.getNodeOffset(root, parentNode, baseOffset + offset);\n  }\n\n  private externalChangeListeners: (\n    (this: HTMLElement, ev: HTMLElementEventMap['change']) => any\n  )[] = [];\n\n  public set hiddenCaret(isCaretHidden: boolean) {\n    if (this.isCaretHidden === isCaretHidden) return;\n    const root = this.getRef('input') as HTMLElement;\n    if (isCaretHidden) {\n      root.classList.add(css.hiddenCaret);\n    } else {\n      root.classList.remove(css.hiddenCaret);\n    }\n    this.isCaretHidden = isCaretHidden;\n  }\n\n  public set value(val: ValueType) {\n    this.valueField = val;\n    this.updateContent();\n  }\n\n  public get value(): ValueType {\n    return this.valueField;\n  }\n\n  public set secret(secret: boolean) {\n    this.secretField = secret;\n    this.updateContent();\n  }\n\n  public get caretPosition(): number {\n    const root = this.getRef('input') as HTMLElement;\n    const selection = window.getSelection();\n    if (!selection || !selection.isCollapsed || !selection.anchorNode) return -1;\n    const { anchorNode } = selection;\n    if (!ContentEditableInput.checkChildNode(root, selection.anchorNode)) return -1;\n    return ContentEditableInput.getNodeOffset(\n      root,\n      anchorNode as Node,\n      anchorNode.nodeType === TEXT_NODE_TYPE ? selection.anchorOffset : 0,\n    );\n  }\n\n  public set caretPosition(position: number) {\n    if (position < 0) return;\n    const root = this.getRef('input') as HTMLElement;\n    let offset = 0;\n    let relativeOffset = 0;\n    const targetNode = Array.prototype.find.call(root.childNodes, (\n      childNode: HTMLElement | Node,\n    ): boolean => {\n      const { length } = ((childNode.nodeType === TEXT_NODE_TYPE\n        ? childNode.nodeValue\n        : ContentEditableInput.getHtmlStringifyValue((childNode as HTMLElement).innerHTML)) || '');\n      relativeOffset = offset;\n      offset += length;\n      return position <= offset;\n    });\n    const selection = window.getSelection();\n    if (!selection || !targetNode) return;\n    const range = new Range();\n    const targetChildNode = targetNode.nodeType === TEXT_NODE_TYPE\n      ? targetNode : targetNode.firstChild;\n    range.setStart(targetChildNode, position - relativeOffset);\n    range.setEnd(targetChildNode, position - relativeOffset);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  private isDisabled = false;\n\n  public get disabled(): boolean {\n    return this.isDisabled;\n  }\n\n  public set disabled(value: boolean) {\n    this.isDisabled = value;\n  }\n\n  private prevContent?: string;\n\n  constructor(container?: Element) {\n    super(template, container, css);\n    this.addEventListener('input', this.changeHandler);\n    this.addEventListener('cut', this.changeHandler);\n    this.addEventListener('paste', this.pasteHandler);\n  }\n\n  public moveCaretToEnd(isForce = false) {\n    const root = this.getRef('input') as HTMLElement;\n    if (isForce) this.focus();\n    if (!root || !this.isFocused) return;\n    const range = document.createRange();\n    const selection = window.getSelection();\n    const node = ContentEditableInput.getLastTextNode(root);\n    if (!node) return;\n    range.selectNodeContents(node);\n    range.collapse(false);\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  public addEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ) {\n    if (type === CHANGE_EVENT_TYPE) {\n      this.externalChangeListeners.push(\n        listener as (this: HTMLElement, ev: HTMLElementEventMap['change']) => any,\n      );\n    } else {\n      super.addEventListener(type, listener, options);\n    }\n  }\n\n  public removeEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ) {\n    if (type === CHANGE_EVENT_TYPE) {\n      this.externalChangeListeners = this.externalChangeListeners.filter((\n        item,\n      ): boolean => item !== listener);\n    } else {\n      super.removeEventListener(type, listener, options);\n    }\n  }\n\n  public destroy() {\n    super.destroy();\n    this.removeEventListener('input', this.changeHandler);\n    this.removeEventListener('cut', this.changeHandler);\n    this.removeEventListener('paste', this.pasteHandler);\n  }\n\n  protected getRootElement(): Element | undefined {\n    return this.getRef('input');\n  }\n\n  private pasteHandler = () => {\n    this.prevContent = BaseInput.getValueString(this.value);\n  };\n\n  private changeHandler = (e: Event) => {\n    this.updateValueField();\n    this.externalChangeListeners.forEach((handler) => handler.call(e.target as HTMLElement, e));\n  };\n\n  private getPasteNormalizedData(): string {\n    const { prevContent } = this;\n    const root = this.getRef('input') as HTMLElement;\n    const data = unescape(root.innerHTML.replace(/<br>/g, ''))\n      .replace(NON_BREAKING_SPACE_PATTERN, ' ')\n      .replace(/<b>/g, '')\n      .replace(/<\\/b>/g, '');\n    if (isUndefined(prevContent)) return data;\n    this.prevContent = undefined;\n    const startIndex = prevContent.split('').reduce((\n      acc: number, char: string, i: number,\n    ): number => {\n      if (acc >= 0) return acc;\n      return data[i] !== char ? i : acc;\n    }, -1);\n    const prefix = startIndex >= 0 ? prevContent.substring(0, startIndex) : prevContent;\n    const suffix = startIndex >= 0 && prefix.length !== prevContent.length\n      ? prevContent.substring(startIndex) : '';\n    const pasteContent = data.replace(prefix, '').replace(suffix, '');\n    const processedPasteContent = pasteContent.replace(/<[a-z]+[^>]*>/g, '')\n      .replace(/<[a-z]+[^>]*\\/>/g, '').replace(/<\\/[a-z]+>/g, '');\n    return data.replace(pasteContent, processedPasteContent);\n  }\n\n  private getInputValue(): string {\n    const data = this.getPasteNormalizedData();\n    const items = data.replace(/<\\/span>[^<]*</g, '</span><').split('</span>').filter(identity);\n    return items.reduce((acc: string, item: string) => {\n      const index = (item.match(/data-index=\"[0-9]+\"/)?.[0] || '').replace(/[^0-9]/g, '');\n      if (index) {\n        const prevValue = this.getValueItemString(Number(index));\n        const updatedValue = ContentEditableInput.getHtmlStringifyValue(item)\n          .replace(new RegExp(`${SECRET_CHARACTER}+`), prevValue);\n        return `${acc}${updatedValue}`;\n      }\n      return `${acc}${ContentEditableInput.getHtmlStringifyValue(item)}`;\n    }, '');\n  }\n\n  private updateValueField() {\n    if (this.preventLockUpdate()) return;\n    const { caretPosition, isDisabled } = this;\n    let updatedCaretPosition = caretPosition;\n    if (isDisabled) {\n      updatedCaretPosition = Math.min(caretPosition,\n        BaseInput.getValueString(this.valueField).length);\n    } else {\n      const inputValue = this.getInputValue();\n      this.valueField = BaseInput.getUpdatedValueField(inputValue, this.valueField);\n    }\n    this.updateContent();\n    this.caretPosition = updatedCaretPosition;\n  }\n\n  private preventLockUpdate(): boolean {\n    const { valueField } = this;\n    if (isString(valueField)) return false;\n    const value = clearStringStyles(this.getInputValue());\n    const lockStr = BaseInput.getLockString(valueField);\n    const deleteUnlockPart = lockStr\n      && lockStr.indexOf(value) === 0\n      && lockStr.length > value.length;\n    if (deleteUnlockPart) {\n      const lastLockIndex = (this.valueField as FormattedValueType)\n        .reduce((acc: number, item: ValueFragmentType, index: number): number => {\n          return !isString(item) && item.lock ? index : acc;\n        }, -1);\n      this.valueField = (this.valueField as FormattedValueType)\n        .filter((_, index: number): boolean => index <= lastLockIndex);\n    }\n    if ((lockStr && value.indexOf(lockStr) !== 0) || deleteUnlockPart) {\n      this.updateContent();\n      this.moveCaretToEnd();\n      return true;\n    }\n    return false;\n  }\n\n  private updateContent() {\n    this.setString();\n    this.updateStyles();\n  }\n\n  private setString() {\n    const { secretField } = this;\n    const input = this.getRef('input') as HTMLElement;\n    const hidden = this.getRef('hidden') as HTMLElement;\n    if (input && hidden) {\n      const str = ContentEditableInput.getStyledValueTemplate(this.valueField, {\n        secret: secretField,\n      });\n      input.innerHTML = str;\n      hidden.innerHTML = str;\n    }\n  }\n\n  private updateStyles() {\n    const input = this.getRef('input') as HTMLElement;\n    const hidden = this.getRef('hidden') as HTMLElement;\n    if (input && hidden) {\n      Array.prototype.forEach.call(hidden.childNodes, (childNode: HTMLElement, index: number) => {\n        if (childNode.nodeType !== TEXT_NODE_TYPE) {\n          const { color } = window.getComputedStyle(childNode);\n          if (color) (input.childNodes[index] as HTMLElement).style.textShadow = `0 0 0 ${color}`;\n        }\n      });\n    }\n  }\n}\n\nexport default ContentEditableInput;\n","import template from './template.html';\nimport css from './index.scss';\n\nimport IInput from '../IInput';\nimport BaseInput from '../BaseInput';\nimport { ValueType } from '../../../types';\n\nclass ViewableInput extends BaseInput implements IInput {\n  public set value(val: ValueType) {\n    this.valueField = val;\n    const root = this.getRef('input') as HTMLElement;\n    if (root) root.innerHTML = BaseInput.getValueTemplate(this.valueField);\n  }\n\n  constructor(container?: Element) {\n    super(template, container, css);\n  }\n\n  public render() {\n    super.render({ css, value: BaseInput.getValueTemplate(this.valueField) });\n  }\n\n  protected getRootElement(): Element | undefined {\n    return this.getRef('input');\n  }\n}\n\nexport default ViewableInput;\n","import css from './index.scss';\nimport template from './template.html';\n\nimport TemplateEngine from '../../TemplateEngine';\nimport ITemplateEngine from '../../TemplateEngine/ITemplateEngine';\nimport { NON_BREAKING_SPACE } from '../../_constants/strings';\n\nclass Label extends TemplateEngine implements ITemplateEngine {\n  private label = '';\n\n  private delimiter = '';\n\n  private reRender = false;\n\n  public set params(params: { label?: string; delimiter?: string }) {\n    this.label = params.label || this.label;\n    this.delimiter = params.delimiter || this.delimiter;\n    this.render();\n  }\n\n  public get params(): { label?: string; delimiter?: string } {\n    const { label, delimiter } = this;\n    return { label, delimiter };\n  }\n\n  constructor(container: Element, params: { label?: string; delimiter?: string } = {}) {\n    super(template, container);\n    this.label = params.label || '';\n    this.delimiter = params.delimiter || '';\n    this.render();\n  }\n\n  public render() {\n    const { label, delimiter } = this;\n    super.render({\n      css, label, delimiter, nbs: NON_BREAKING_SPACE,\n    }, this.reRender ? { replace: this } : {});\n    this.reRender = true;\n  }\n}\n\nexport default Label;\n","import { isArray, isString, noop, get } from 'lodash-es';\n\nimport css from './index.scss';\nimport lineTemplate from './template.html';\n\nimport { DOWN_CODE, ENTER_CODE, LEFT_CODE, RIGHT_CODE, UP_CODE } from '../_constants/keyCodes';\nimport { getKeyCode } from '../../../../../general/utils/event';\nimport ICaret from '../BaseCaret/ICaret';\nimport ICaretFactory from '../CaretFactory/ICaretFactory';\nimport CaretFactory from '../CaretFactory';\nimport { LOCK_TIMEOUT } from './constants';\nimport { ValueType } from '../types';\nimport TemplateEngine from '../TemplateEngine';\nimport ILine from './ILine';\nimport { ContentEditableInput, ViewableInput } from './Input';\nimport { NON_BREAKING_SPACE } from '../_constants/strings';\nimport IInput from './Input/IInput';\nimport { ParamsType } from './types';\nimport BaseInput from './Input/BaseInput';\nimport ILabel from './Label/ILabel';\nimport Label from './Label';\n\nclass Line extends TemplateEngine implements ILine {\n  public static getHeight(\n    params: {\n      delimiter?: string;\n      label?: string;\n      value: ValueType;\n      width: number;\n      itemSize: { width: number; height: number },\n    },\n  ): number {\n    const { delimiter, label, value, width, itemSize } = params;\n    const { width: itemWidth, height: itemHeight } = itemSize;\n    const valueString = BaseInput.getValueString(value);\n    const labelLength = (delimiter ? delimiter.length + 1 : 0)\n      + (label ? label.length + 1 : 0);\n    const rowItemsCount = Math\n      .floor((width - Line.itemHorizontalPadding - labelLength * itemWidth) / itemWidth);\n    return Math.ceil((valueString.length || 1) / rowItemsCount) * itemHeight\n      + 2 * Line.itemVerticalPadding;\n  }\n\n  private static cf: ICaretFactory = CaretFactory.getInstance();\n\n  private static itemVerticalPadding = 4;\n\n  private static itemHorizontalPadding = 16;\n\n  public label?: ILabel;\n\n  public get value(): ValueType {\n    const { inputField } = this;\n    return inputField ? inputField.value : '';\n  }\n\n  public set value(val: ValueType) {\n    const { inputField } = this;\n    if (inputField) {\n      inputField.value = val;\n      inputField.moveCaretToEnd();\n    }\n  }\n\n  public get disabled(): boolean {\n    const { input, editable } = this;\n    return editable && input ? input.disabled : true;\n  }\n\n  public set disabled(value: boolean) {\n    const { input, editable } = this;\n    if (input && editable) input.disabled = value;\n  }\n\n  private isVisible = true;\n\n  public get visible(): boolean {\n    return this.isVisible;\n  }\n\n  public set visible(value: boolean) {\n    const root = this.getRef('root');\n    if (this.isVisible === value || !root) return;\n    this.isVisible = value;\n    if (value) {\n      root.classList.add(css.visible);\n    } else {\n      root.classList.remove(css.visible);\n    }\n  }\n\n  public get hidden(): boolean {\n    return this.isHidden;\n  }\n\n  private heightField = 0;\n\n  public get height(): number {\n    return this.heightField;\n  }\n\n  private get characterSize(): { width: number; height: number } {\n    const { offsetWidth, offsetHeight } = this.getRef('helpContainer') as HTMLElement;\n    return { width: offsetWidth, height: offsetHeight };\n  }\n\n  private inputField?: IInput;\n\n  public get input(): IInput | undefined {\n    return this.inputField;\n  }\n\n  private secretField = false;\n\n  public get secret(): boolean {\n    return this.secretField;\n  }\n\n  public set secret(secret: boolean) {\n    const { inputField } = this;\n    this.secretField = secret;\n    if (inputField) inputField.secret = secret;\n  }\n\n  public get caretOffset(): { left: number; top: number } {\n    const { input } = this;\n    return this.getInputRootOffset(input ? input.getCaretOffset() : { left: 0, top: 0 });\n  }\n\n  public get endOffset(): { left: number; top: number } {\n    const { input } = this;\n    return this.getInputRootOffset(input ? input.getEndOffset() : { left: 0, top: 0 });\n  }\n\n  private get labelWidth(): number {\n    const { label, characterSize: { width } } = this;\n    return label\n      ? ((label.params.label?.length || -1) + (label.params.delimiter?.length || -1) + 2) * width\n      : 0;\n  }\n\n  private get contentPadding(): { left: number; top: number } {\n    const content = this.getRef('content');\n    if (!content) return { left: 0, top: 0 };\n    const styles = window.getComputedStyle(content);\n    return {\n      left: Number(styles.paddingLeft.replace('px', '')),\n      top: Number(styles.paddingTop.replace('px', '')),\n    };\n  }\n\n  private initialValue: ValueType = '';\n\n  private caret?: ICaret;\n\n  private className = '';\n\n  private editable = false;\n\n  private onSubmit: (params: {\n    value: string; formattedValue: ValueType; lockString: string;\n  }) => void = noop;\n\n  private onChange: (value: string) => void = noop;\n\n  private onUpdateCaretPosition: (caretPosition: number, caret?: ICaret) => void = noop;\n\n  private lockTimeout?: ReturnType<typeof setTimeout>;\n\n  private caretPosition?: number = -1;\n\n  constructor(container: Element, params: ParamsType = {}) {\n    super(lineTemplate, container);\n    this.setParams(params);\n    this.container = container;\n    this.render({ label: params.label, delimiter: params.delimiter });\n    this.setCaret(params.caret || 'simple');\n    this.addEventListeners();\n    this.updateHeight();\n    this.frameHandler = this.updateCaretData;\n    this.setupEditing();\n  }\n\n  public stopEdit() {\n    const { label } = this;\n    const labelParams = label ? label.params : { label: '', delimiter: '' };\n    this.removeCaret();\n    this.removeEventListeners();\n    this.editable = false;\n    this.unregisterFrameHandler();\n    this.render(labelParams);\n  }\n\n  public focus() {\n    const { inputField } = this;\n    if (!inputField) return;\n    const { isFocused } = inputField;\n    if (!isFocused) {\n      inputField.focus();\n      inputField.moveCaretToEnd();\n    }\n  }\n\n  public blur() {\n    const { inputField } = this;\n    if (!inputField) return;\n    const { isFocused } = inputField;\n    if (isFocused) inputField.blur();\n  }\n\n  public submit() {\n    this.submitHandler();\n  }\n\n  public render(params: { label?: string, delimiter?: string }) {\n    const { editable, className, secret } = this;\n    const reRender = Boolean(this.getRef('root'));\n    if (this.inputField) {\n      this.initialValue = this.inputField.value;\n      this.inputField.destroy();\n    }\n    if (this.label) this.label.destroy();\n    super.render({\n      css, editable, className, nbs: NON_BREAKING_SPACE,\n    }, reRender ? { replace: this } : {});\n    this.inputField = editable\n      ? new ContentEditableInput(this.getRef('inputContainer') as HTMLElement)\n      : new ViewableInput(this.getRef('inputContainer') as HTMLElement);\n    this.label = new Label(this.getRef('labelContainer') as Element, params);\n    this.inputField.value = this.initialValue;\n    this.inputField.secret = secret;\n  }\n\n  public setCaret(name = 'simple') {\n    const { inputField, editable } = this;\n    this.removeCaret();\n    const caret = Line.cf.create(name, this.getRef('inputContainer') as Element);\n    if (!inputField) return;\n    if (caret && editable) {\n      inputField.hiddenCaret = true;\n    } else {\n      inputField.hiddenCaret = false;\n      return;\n    }\n    this.caret = caret;\n    this.updateCaretData();\n  }\n\n  public updateViewport() {\n    const { isHidden } = this;\n    if (isHidden) this.show();\n    this.updateInputSize();\n    if (isHidden) this.hide();\n  }\n\n  public destroy() {\n    super.destroy();\n    const { lockTimeout } = this;\n    if (lockTimeout) clearTimeout(lockTimeout);\n    this.removeCaret();\n    this.removeEventListeners();\n  }\n\n  public moveCaretToEnd(isForce = false) {\n    const { inputField, editable } = this;\n    if (inputField && editable) (inputField as ContentEditableInput).moveCaretToEnd(isForce);\n  }\n\n  public clear() {\n    this.value = '';\n  }\n\n  private setParams(params: ParamsType) {\n    const {\n      onUpdateCaretPosition = noop, onChange = noop, onSubmit = noop, editable = true,\n      className = '', value, secret = false,\n    } = params;\n    this.className = className;\n    this.onSubmit = onSubmit;\n    this.onChange = onChange;\n    this.onUpdateCaretPosition = onUpdateCaretPosition;\n    this.editable = editable;\n    this.secret = secret;\n    this.initialValue = value || '';\n  }\n\n  private addEventListeners() {\n    const { editable, inputField } = this;\n    if (editable && inputField) {\n      inputField.addEventListener('keydown', this.keyDownHandler);\n      inputField.addEventListener('change', this.changeHandler);\n    }\n  }\n\n  private removeEventListeners() {\n    const { editable, inputField } = this;\n    if (editable && inputField) {\n      inputField.removeEventListener('keydown', this.keyDownHandler);\n      inputField.removeEventListener('change', this.changeHandler);\n    }\n  }\n\n  private updateHeight = () => {\n    const root = this.getRef('root') as HTMLInputElement;\n    if (!root) return;\n    this.heightField = root.offsetHeight;\n  };\n\n  private setupEditing() {\n    if (this.editable && this.inputField) {\n      this.registerFrameHandler();\n      this.inputField.moveCaretToEnd(true);\n    }\n  }\n\n  private keyDownHandler = (e: KeyboardEvent) => {\n    (({\n      [ENTER_CODE]: this.submitHandler,\n      [LEFT_CODE]: this.lockCaret,\n      [RIGHT_CODE]: this.lockCaret,\n      [UP_CODE]: this.lockCaret,\n      [DOWN_CODE]: this.lockCaret,\n    } as { [code: number]: (e: KeyboardEvent) => void })[Number(getKeyCode(e))] || noop)(e);\n  };\n\n  private submitHandler = (e?: Event) => {\n    const { onSubmit, inputField, secret } = this;\n    const value = inputField?.value || '';\n    let formattedValue: ValueType = '';\n    if (isString(value)) {\n      formattedValue = secret ? '' : value;\n    } else if (isArray(value)) {\n      formattedValue = secret ? value.filter((item) => get(item, 'lock')) : value;\n    }\n    e?.preventDefault();\n    if (inputField && onSubmit) {\n      onSubmit({\n        formattedValue,\n        value: inputField.getSimpleValue(),\n        lockString: inputField.lockString,\n      });\n    }\n  };\n\n  private changeHandler = () => {\n    const { inputField } = this;\n    if (inputField) {\n      this.updateInputSize();\n      this.lockCaret();\n      this.onChange(inputField.getSimpleValue());\n    }\n  };\n\n  private updateInputSize = () => {\n    const { width } = this.characterSize;\n    const inputContainer = this.getRef('inputContainer');\n    const input = this.getRef('input') as HTMLInputElement;\n    const { offsetWidth } = inputContainer as HTMLElement;\n    if (!input) return this.updateRowsCount(2);\n    const value = this.editable ? input.value : input.innerHTML;\n    if (!width || !value || !offsetWidth) return this.updateRowsCount(2);\n    const rowLength = Math.floor(offsetWidth / width);\n    return this.updateRowsCount(Math.ceil(value.length / rowLength) + 1);\n  };\n\n  private updateRowsCount(count: number) {\n    const input = this.getRef('input') as HTMLInputElement;\n    if (this.editable && input && Number(input.getAttribute('rows')) !== count) {\n      input.setAttribute('rows', String(count));\n    }\n    this.updateHeight();\n  }\n\n  private updateCaretData = () => {\n    const {\n      editable, caret, inputField, onUpdateCaretPosition, caretPosition: caretPositionPrev,\n    } = this;\n    if (!editable || !inputField || !caret) {\n      if (caretPositionPrev !== -1) {\n        this.caretPosition = -1;\n        onUpdateCaretPosition(this.caretPosition, this.caret);\n      }\n      return;\n    }\n    const { caretPosition } = inputField;\n    if (inputField.isFocused && caretPosition >= 0) {\n      this.showCaret(caretPosition);\n    } else {\n      this.hideCaret();\n    }\n    if (caretPositionPrev !== caretPosition) {\n      this.caretPosition = caretPosition;\n      onUpdateCaretPosition(this.caretPosition, this.caret);\n    }\n  };\n\n  private showCaret(caretPosition: number) {\n    const { caret, inputField } = this;\n    const { width, height } = this.characterSize;\n    const inputContainer = this.getRef('inputContainer');\n    if (!caret || !inputContainer || !inputField) return;\n    const { offsetWidth } = inputContainer as HTMLElement;\n    const value = inputField.getSimpleValue(false);\n    const rowLength = Math.floor(offsetWidth / width);\n    const row = Math.floor(caretPosition / rowLength);\n    caret.hidden = false;\n    const character = value[caretPosition] === ' '\n      ? NON_BREAKING_SPACE : value[caretPosition] || NON_BREAKING_SPACE;\n    const top = Math.round(height * row);\n    const left = Math.round((caretPosition - row * rowLength) * width);\n    caret.setPosition(left, top);\n    caret.setValue(character);\n  }\n\n  private hideCaret() {\n    const { caret } = this;\n    if (!caret) return;\n    caret.hidden = true;\n  }\n\n  private removeCaret() {\n    const { caret } = this;\n    if (!caret) return;\n    this.caret = undefined;\n    caret.destroy();\n  }\n\n  private lockCaret = () => {\n    const { caret, lockTimeout } = this;\n    if (lockTimeout) clearTimeout(lockTimeout);\n    if (!caret) return;\n    caret.lock = true;\n    this.lockTimeout = setTimeout(() => caret.lock = false, LOCK_TIMEOUT);\n  };\n\n  private getInputRootOffset(offset: { left: number; top: number }): { left: number; top: number } {\n    const { label, input, labelWidth, contentPadding: { top: pt, left: pl } } = this;\n    if (!input && !label) return { left: pl, top: pt };\n    return input\n      ? { left: offset.left + labelWidth + pl, top: offset.top + pt }\n      : { left: labelWidth + pl, top: pt };\n  }\n}\n\nexport default Line;\n","export const checkArraysEqual = <T>(\n  first: T[], second: T[],\n): boolean => first.length === second.length && first.every((item) => second.includes(item));\n","import { Emitter } from 'key-layers-js';\nimport { isArray, isNumber } from 'lodash-es';\nimport { v1 as guid } from 'uuid';\n\nimport IKeyboardShortcutsManager from './IKeyboardShortcutsManager';\nimport {\n  ActionShortcutType, CallbackInfoType,\n  NormalizedActionShortcutType,\n  ShortcutMapItemType,\n} from './types';\nimport { checkArraysEqual } from '../_utils/array';\nimport { InfoType } from '../types';\n\nclass KeyboardShortcutsManager implements IKeyboardShortcutsManager {\n  private static checkShortcutsEqual(\n    first: ActionShortcutType, second: ActionShortcutType,\n  ): boolean {\n    const firstNormalized = KeyboardShortcutsManager.getNormalizedShortcut(first);\n    const secondNormalized = KeyboardShortcutsManager.getNormalizedShortcut(second);\n    return firstNormalized.ctrlKey === secondNormalized.ctrlKey\n      && firstNormalized.metaKey === secondNormalized.metaKey\n      && firstNormalized.altKey === secondNormalized.altKey\n      && firstNormalized.shiftKey === secondNormalized.shiftKey\n      && checkArraysEqual<number>(firstNormalized.codes, secondNormalized.codes);\n  }\n\n  private static getNormalizedShortcut(shortcut: ActionShortcutType): NormalizedActionShortcutType {\n    const normalizedShortcut: NormalizedActionShortcutType = {\n      codes: [], ctrlKey: false, metaKey: false, altKey: false, shiftKey: false,\n    };\n    if (isNumber(shortcut)) {\n      normalizedShortcut.codes = [shortcut];\n    } else if (isArray(shortcut) && isNumber(shortcut[0])) {\n      normalizedShortcut.codes = shortcut;\n    } else {\n      normalizedShortcut.codes = isArray((shortcut as { code: number | number[] }).code)\n        ? (shortcut as { code: number[] }).code : [(shortcut as { code: number }).code];\n      normalizedShortcut.ctrlKey = (shortcut as { ctrl?: boolean }).ctrl\n        || normalizedShortcut.ctrlKey;\n      normalizedShortcut.metaKey = (shortcut as { meta?: boolean }).meta\n        || normalizedShortcut.metaKey;\n      normalizedShortcut.altKey = (shortcut as { alt?: boolean }).alt || normalizedShortcut.altKey;\n      normalizedShortcut.shiftKey = (shortcut as { shift?: boolean }).shift\n        || normalizedShortcut.shiftKey;\n    }\n    return normalizedShortcut;\n  }\n\n  private layerField = 1;\n\n  public get layer(): number {\n    return this.layerField;\n  }\n\n  public set layer(val: number) {\n    const { layerField, emitter } = this;\n    if (layerField === val) return;\n    this.layerField = val;\n    if (emitter) emitter.updateLayerType(val);\n  }\n\n  private emitter?: Emitter;\n\n  private shortcutsMapField: { [action: string]: ShortcutMapItemType[] } = {};\n\n  private listeners: {\n    [actions: string]: {\n      callback: (action: string, e: Event, info?: CallbackInfoType) => void | boolean;\n      info?: InfoType;\n    }[];\n  } = {};\n\n  private actionHandler?: (action: string, e: Event) => void;\n\n  private readonly unlockKey: string;\n\n  private isLock = false;\n\n  private lockWhiteList: string[] = [];\n\n  constructor(params?: { onAction?: (action: string, e: Event) => void }, unlockKey?: string) {\n    this.actionHandler = (params || {}).onAction;\n    this.unlockKey = unlockKey || guid();\n  }\n\n  public addListener(\n    action: string,\n    callback: (action: string, e: Event, info?: CallbackInfoType) => void | boolean,\n    info?: InfoType,\n  ): void {\n    const { listeners } = this;\n    if (!listeners[action]) listeners[action] = [];\n    listeners[action].push({ callback, info });\n  }\n\n  public removeListener(\n    callback: (action: string, e: Event, info?: CallbackInfoType) => void | boolean,\n  ): void {\n    const { listeners } = this;\n    Object.keys(listeners).some((action: string) => {\n      const index = listeners[action].findIndex((item) => item.callback === callback);\n      if (index >= 0) {\n        listeners[action].splice(index, 1);\n        return true;\n      }\n      return false;\n    });\n  }\n\n  public addShortcut(action: string, shortcut: ActionShortcutType, info?: InfoType) {\n    const { shortcutsMapField } = this;\n    const shortcutIndex = this.getShortcutIndex(action, shortcut);\n    if (shortcutIndex >= 0) return;\n    if (!shortcutsMapField[action]) shortcutsMapField[action] = [];\n    (shortcutsMapField[action] as ShortcutMapItemType[]).push({\n      info, actionShortcut: shortcut,\n    });\n    this.deactivate();\n    this.activate();\n  }\n\n  public removeShortcut(action: string, shortcut?: ActionShortcutType) {\n    const { shortcutsMapField } = this;\n    if (!shortcut) return delete shortcutsMapField[action];\n    const shortcutIndex = this.getShortcutIndex(action, shortcut);\n    if (shortcutIndex === true) return delete shortcutsMapField[action];\n    if (shortcutIndex >= 0) {\n      (shortcutsMapField[action] as ShortcutMapItemType[]).splice(shortcutIndex as number, 1);\n      this.deactivate();\n      this.activate();\n    }\n    return null;\n  }\n\n  public activate() {\n    if (!this.emitter) {\n      this.emitter = new Emitter(this.layerField);\n      this.addListeners();\n    }\n  }\n\n  public deactivate() {\n    const { emitter } = this;\n    if (emitter) emitter.destroy();\n    delete this.emitter;\n  }\n\n  public destroy() {\n    this.deactivate();\n  }\n\n  public lock(whiteList: string[] = []): (() => void) | undefined {\n    if (this.isLock) return undefined;\n    this.isLock = true;\n    this.lockWhiteList = whiteList;\n    return () => {\n      this.unlock(this.unlockKey);\n    };\n  }\n\n  public unlock(key: string) {\n    if (this.unlockKey === key) {\n      this.isLock = false;\n      this.lockWhiteList = [];\n    }\n  }\n\n  private getShortcutIndex(action: string, shortcut: ActionShortcutType): number | boolean {\n    const info = this.shortcutsMapField[action];\n    if (!info) return -1;\n    return (info as ShortcutMapItemType[]).findIndex(\n      (item) => KeyboardShortcutsManager.checkShortcutsEqual(item.actionShortcut, shortcut),\n    );\n  }\n\n  private addListeners() {\n    const { emitter, shortcutsMapField, listeners, actionHandler, isLock, lockWhiteList } = this;\n    if (!emitter) return;\n    Object.keys(shortcutsMapField).forEach((action) => {\n      shortcutsMapField[action].forEach((item) => {\n        const { info: shortcut } = item;\n        const actionShortcut = KeyboardShortcutsManager.getNormalizedShortcut(item.actionShortcut);\n        emitter.addListener('keyDown', (e: Event) => {\n          if (isLock && !lockWhiteList.includes(action)) return;\n          const callbackList = listeners[action];\n          if (callbackList) {\n            callbackList.some(\n              ({ callback, info: listener }) => callback(action, e, { listener, shortcut }),\n            );\n          }\n          if (actionHandler) actionHandler(action, e);\n        }, actionShortcut);\n      });\n    });\n  }\n}\n\nexport default KeyboardShortcutsManager;\n","class ValueEvent {\n  public readonly value: string;\n\n  public readonly typedValue?: string;\n\n  constructor(value: string, typedValue?: string) {\n    this.value = value;\n    this.typedValue = typedValue;\n  }\n}\n\nexport default ValueEvent;\n","export const SUBMIT_EVENT_NAME = 'submit';\nexport const ACTION_EVENT_NAME = 'action';\nexport const UPDATE_CARET_POSITION_EVENT_NAME = 'caretPosition';\n\nexport const INPUT_EVENT_LIST = [\n  'change',\n  'focus',\n  'blur',\n  'keydown',\n  'keypress',\n  'keyup',\n];\n\nexport const CLEAR_ACTION_NAME = 'clear';\n","class ActionEvent {\n  public readonly action: string;\n\n  public readonly data?: any;\n\n  public readonly target?: HTMLElement | HTMLElement[]\n    | { [key: string]: HTMLElement | HTMLElement[] };\n\n  constructor(\n    params: {\n      action: string;\n      data?: any;\n      target?: HTMLElement | HTMLElement[]\n        | { [key: string]: HTMLElement | HTMLElement[] };\n    },\n  ) {\n    this.action = params.action;\n    this.data = params.data;\n    this.target = params.target;\n  }\n}\n\nexport default ActionEvent;\n","import { isString } from 'lodash-es';\n\nimport IPluginManager from './IPluginManager';\nimport IPlugin from './Plugin/IPlugin';\nimport ITermInfo from '../_interfaces/ITermInfo';\nimport IKeyboardShortcutsManager from '../KeyboardShortcutsManager/IKeyboardShortcutsManager';\n\nclass PluginManager implements IPluginManager {\n  private pluginList: { name: string; inst: IPlugin }[] = [];\n\n  private termInfo: ITermInfo;\n\n  private readonly keyboardShortcutsManager: IKeyboardShortcutsManager;\n\n  constructor(termInfo: ITermInfo, keyboardShortcutsManager: IKeyboardShortcutsManager) {\n    this.termInfo = termInfo;\n    this.keyboardShortcutsManager = keyboardShortcutsManager;\n  }\n\n  public updateTermInfo(termInfo: ITermInfo) {\n    this.termInfo = termInfo;\n    this.pluginList.forEach(({ inst }) => {\n      inst.updateTermInfo(termInfo);\n    });\n  }\n\n  public register(plugin: IPlugin, name?: string) {\n    const { pluginList, termInfo } = this;\n    const pluginName = name || plugin.name;\n    if (this.getPluginIndex(pluginName, plugin) >= 0) return;\n    pluginList.push({ name: pluginName, inst: plugin });\n    this.clearPlugins();\n    plugin.setTermInfo(termInfo, this.keyboardShortcutsManager);\n  }\n\n  public unregister(descriptor: string | IPlugin) {\n    const { pluginList } = this;\n    const index = typeof descriptor === 'string'\n      ? this.getPluginIndex(descriptor)\n      : this.getPluginIndex(descriptor.name, descriptor);\n    if (index < 0) return;\n    pluginList.splice(index, 1);\n    const item = pluginList[index];\n    if (!item) return;\n    this.clearPlugins();\n    item.inst.destroy();\n  }\n\n  public destroy() {\n    this.pluginList.forEach(({ inst }) => inst.destroy());\n    this.pluginList = [];\n  }\n\n  public getPlugin(descriptor: string | (new () => IPlugin)): IPlugin | null {\n    const { pluginList } = this;\n    return isString(descriptor)\n      ? pluginList.find(({ name }): boolean => name === descriptor)?.inst || null\n      : pluginList.find(({ inst }): boolean => inst instanceof descriptor)?.inst || null;\n  }\n\n  private getPluginIndex(name: string, plugin?: IPlugin): number {\n    const { pluginList } = this;\n    const nameIndex = pluginList.findIndex((item) => item.name === name);\n    if (nameIndex >= 0 || !plugin) return nameIndex;\n    return pluginList.findIndex((item) => item.inst.equal(plugin));\n  }\n\n  private clearPlugins() {\n    this.pluginList.forEach(({ inst }) => inst.clear());\n  }\n}\n\nexport default PluginManager;\n","import ICaret from '../BaseCaret/ICaret';\n\nclass CaretEvent {\n  public readonly position: number;\n\n  public readonly caret?: ICaret;\n\n  constructor(position: number, caret?: ICaret) {\n    this.position = position;\n    this.caret = caret;\n  }\n}\n\nexport default CaretEvent;\n","export const IS_MAC = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n","export const BASE_PLUGIN_NAME = 'base';\n","/* tslint:disable:no-empty */\nimport ITermInfo from '../../_interfaces/ITermInfo';\nimport IKeyboardShortcutsManager from '../../KeyboardShortcutsManager/IKeyboardShortcutsManager';\nimport { BASE_PLUGIN_NAME } from '../constants';\nimport IPlugin from './IPlugin';\n\nclass Plugin implements IPlugin {\n  public readonly name: string = BASE_PLUGIN_NAME;\n\n  protected termInfo?: ITermInfo;\n\n  protected keyboardShortcutsManager?: IKeyboardShortcutsManager;\n\n  public setTermInfo(termInfo: ITermInfo, keyboardShortcutsManager: IKeyboardShortcutsManager) {\n    this.termInfo = termInfo;\n    this.keyboardShortcutsManager = keyboardShortcutsManager;\n  }\n\n  public updateTermInfo(termInfo: ITermInfo) {\n    this.termInfo = termInfo;\n  }\n\n  public destroy() {\n    this.clear();\n  }\n\n  public equal(plugin: IPlugin): boolean {\n    return plugin.name === this.name;\n  }\n\n  public clear() {}\n}\n\nexport default Plugin;\n","import { last, get, isUndefined, isArray, isString, isObject } from 'lodash-es';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport './_styles/fonts.scss';\nimport './_styles/theme.scss';\nimport css from './index.scss';\nimport template from './template.html';\n\nimport VirtualizedList from './VirtualizedList';\nimport IVirtualizedList from './VirtualizedList/IVirtualizedList';\nimport TemplateEngine from './TemplateEngine';\nimport { getKeyCode } from '../../../../general/utils/event';\nimport { escapeString } from '../../../../general/utils/string';\nimport { DOWN_CODE, K_CODE, UP_CODE } from './_constants/keyCodes';\nimport { compareItemSize, getItemSize } from './_utils/viewport';\nimport { getScrollbarSize } from '../../../../general/utils/viewport';\nimport {\n  EditLineParamsType,\n  FormattedValueFragmentType,\n  SizeType,\n  TermConstructorParamsType,\n  TermInfoCaretType,\n  TermInfoEditType,\n  TermInfoElementsType,\n  TermInfoLabelType, TermInfoLinesTypes,\n  TermParamsType,\n  ValueType,\n} from './types';\n\nimport ITerm from './ITerm';\nimport ITermEventMap from './_interfaces/ITermEventMap';\nimport Line from './Line';\nimport ILine from './Line/ILine';\nimport KeyboardShortcutsManager from './KeyboardShortcutsManager';\nimport ValueEvent from './_events/ValueEvent';\nimport {\n  ACTION_EVENT_NAME,\n  CLEAR_ACTION_NAME,\n  INPUT_EVENT_LIST,\n  SUBMIT_EVENT_NAME,\n  UPDATE_CARET_POSITION_EVENT_NAME,\n} from './_constants/events';\nimport ActionEvent from './_events/ActionEvent';\nimport IKeyboardShortcutsManager from './KeyboardShortcutsManager/IKeyboardShortcutsManager';\nimport IPluginManager from './PluginManager/IPluginManager';\nimport PluginManager from './PluginManager';\nimport ITermInfo from './_interfaces/ITermInfo';\nimport BaseInput from './Line/Input/BaseInput';\nimport { CHANGE_EVENT_TYPE } from './Line/Input/ContentEditableInput/constants';\nimport CaretEvent from './_events/CaretEvent';\nimport ICaret from './BaseCaret/ICaret';\nimport { DEFAULT_DELIMITER } from './_constants/strings';\nimport { IS_MAC } from './_constants/browser';\n\nexport { default as ITerm } from './ITerm';\nexport { default as ITermInfo } from './_interfaces/ITermInfo';\nexport { default as KeyboardShortcutsManager } from './KeyboardShortcutsManager';\nexport { default as IKeyboardShortcutsManager } from './KeyboardShortcutsManager/IKeyboardShortcutsManager';\nexport { ActionShortcutType } from './KeyboardShortcutsManager/types';\nexport { TermConstructorParamsType, ValueType, InfoType } from './types';\nexport { default as Plugin } from './PluginManager/Plugin';\nexport { default as IPlugin } from './PluginManager/Plugin/IPlugin';\nexport { default as TemplateEngine } from './TemplateEngine';\nexport { default as ITemplateEngine } from './TemplateEngine/ITemplateEngine';\n\nclass Term extends TemplateEngine implements ITerm {\n  private isDisabled = false;\n\n  public get disabled(): boolean {\n    return this.isDisabled;\n  }\n\n  public set disabled(val: boolean) {\n    const { isDisabled, editLine, keyboardShortcutsManager } = this;\n    if (isDisabled === val) return;\n    this.isDisabled = val;\n    if (editLine) editLine.disabled = val;\n    if (val) keyboardShortcutsManager.deactivate();\n    else keyboardShortcutsManager.activate();\n  }\n\n  private headerField = '';\n\n  public get header(): string {\n    return this.headerField;\n  }\n\n  public set header(val: string) {\n    const { headerField } = this;\n    if (headerField !== val) {\n      const headerText = this.getRef('headerText') as HTMLElement;\n      headerText.innerHTML = escapeString(val);\n    }\n    this.headerField = val;\n  }\n\n  private readonly ro: ResizeObserver;\n\n  private readonly vl: IVirtualizedList<ILine>;\n\n  public readonly keyboardShortcutsManager: IKeyboardShortcutsManager;\n\n  public readonly pluginManager: IPluginManager;\n\n  private history: { list: string[]; index: number; stopHistory: boolean } = {\n    list: [], index: -1, stopHistory: false,\n  };\n\n  private params: TermParamsType = {\n    label: '',\n    delimiter: DEFAULT_DELIMITER,\n    header: '',\n    caret: '',\n    scrollbarSize: 20,\n    size: { width: 1, height: 1 },\n  };\n\n  private isEditing = false;\n\n  private writingInterval?: ReturnType<typeof setInterval>;\n\n  private submitTimeout?: ReturnType<typeof setTimeout>;\n\n  private itemSize: SizeType = { width: 1, height: 1 };\n\n  private heightCache: number[] = [];\n\n  private lines: ValueType[] = [];\n\n  private editLine?: ILine;\n\n  private listeners: {\n    [event: string]: ({ handler: (e: any) => void, options?: EventListenerOptions })[];\n  } = {};\n\n  constructor(container: Element, params: TermConstructorParamsType = { lines: [], editLine: '' }) {\n    super(template, container);\n    const { virtualizedTopOffset, virtualizedBottomOffset, header } = params;\n    this.headerField = header || '';\n    this.init(container, params);\n    this.ro = new ResizeObserver(this.observeHandler);\n    this.keyboardShortcutsManager = new KeyboardShortcutsManager({ onAction: this.actionHandler });\n    this.vl = new VirtualizedList(this.getRef('linesContainer') as Element, {\n      length: this.lines.length,\n      itemGetter: this.itemGetter,\n      heightGetter: this.heightGetter,\n      topOffset: virtualizedTopOffset || 0,\n      bottomOffset: virtualizedBottomOffset || 0,\n    });\n    this.preStart(container, params);\n    this.pluginManager = new PluginManager(this.getTermInfo(), this.keyboardShortcutsManager);\n  }\n\n  public addEventListener = <K extends keyof ITermEventMap>(\n    type: K, handler: (e: ITermEventMap[K]) => void, options?: EventListenerOptions,\n  ) => {\n    const { listeners } = this;\n    if (!listeners[type]) listeners[type] = [];\n    listeners[type].push({ handler, options });\n    this.registerListener(type, handler, options);\n  };\n\n  public removeEventListener = <K extends keyof ITermEventMap>(\n    type: K, handler: (e: ITermEventMap[K]) => void, options?: EventListenerOptions,\n  ) => {\n    const list = this.listeners[type];\n    if (!list) return;\n    const index = list.findIndex((item) => item.handler === handler);\n    if (index >= 0) list.splice(index, 1);\n    this.unregisterListener(type, handler, options);\n  };\n\n  public destroy() {\n    clearInterval(this.writingInterval as unknown as number);\n    clearTimeout(this.submitTimeout as unknown as number);\n    this.removeKeyDownHandler();\n    this.unregisterAllListeners();\n    this.editLine?.destroy();\n    this.removeListeners();\n    this.pluginManager.destroy();\n    this.keyboardShortcutsManager.destroy();\n    getItemSize(this.getRef('root') as HTMLElement);\n    // TODO: add unobserve.\n    super.destroy();\n  }\n\n  public setLabel = (params: { label?: string; delimiter?: string } = {}) => {\n    const { editLine, params: currentParams } = this;\n    const { label, delimiter } = params;\n    let isUpdated = false;\n    if (!isUndefined(label)) {\n      currentParams.label = label;\n      isUpdated = true;\n    }\n    if (!isUndefined(delimiter)) {\n      currentParams.delimiter = delimiter;\n      isUpdated = true;\n    }\n    if (editLine && editLine.label) editLine.label.params = params;\n    if (isUpdated) this.updateTermInfo();\n  };\n\n  public write = (\n    data: string | FormattedValueFragmentType,\n    options: { withSubmit?: boolean; duration?: number } = {},\n  ): Promise<boolean> | boolean => {\n    const { editLine, isEditing } = this;\n    const { withSubmit, duration = 0 } = options;\n    if (!editLine || isEditing) return duration ? Promise.resolve(false) : false;\n    this.isEditing = true;\n    editLine.disabled = true;\n    if (duration >= 0) {\n      const { value: original } = editLine;\n      const str = isString(data) ? data : data.str;\n      const millisecondCharactersCount = str.length / duration;\n      let milliseconds = 0;\n      const updatingValue = isString(data) ? { str: data } : { ...data, str: '' };\n      return new Promise((res: (result: boolean) => void) => {\n        this.writingInterval = setInterval(() => {\n          milliseconds += 1;\n          const substr = str.substr(0, Math.floor(millisecondCharactersCount * milliseconds));\n          if (substr === str) {\n            clearInterval(this.writingInterval as unknown as number);\n            this.updateEditLine(data, true, original);\n            if (withSubmit) editLine.submit();\n            res(true);\n          } else if (updatingValue.str !== substr) {\n            updatingValue.str = substr;\n            this.updateEditLine(updatingValue, false, original);\n          }\n        }, 1);\n      });\n    }\n    this.updateEditLine(data, true);\n    if (withSubmit) editLine.submit();\n    return true;\n  };\n\n  public setCaret(caret: string) {\n    this.params.caret = caret;\n    if (!this.editLine) return;\n    this.editLine.setCaret(caret);\n    this.updateTermInfo();\n  }\n\n  public setHeader(text: string) {\n    const header = this.getRef('header');\n    const headerText = this.getRef('headerText') as Element;\n    if (text) {\n      headerText.innerHTML = text;\n      header?.classList.remove(css.hidden);\n    } else {\n      header?.classList.add(css.hidden);\n    }\n    this.params.header = '';\n    this.updateTermInfo();\n  }\n\n  public blur() {\n    const { editLine } = this;\n    if (editLine) editLine.blur();\n  }\n\n  private updateEditLine(\n    data: string | FormattedValueFragmentType, stopEdit?: boolean, original?: ValueType,\n  ) {\n    const { editLine } = this;\n    if (editLine) {\n      const value = isUndefined(original) ? editLine.value : original;\n      editLine.value = isArray(value) ? [...value, data] : [value, data];\n      editLine.moveCaretToEnd();\n      if (stopEdit) editLine.disabled = false;\n    }\n    if (stopEdit) this.isEditing = false;\n  }\n\n  private init(container: Element, params: TermConstructorParamsType) {\n    const { header = '' } = params;\n    this.setParams(container, params);\n    this.render({ css, header, hidden: header ? '' : css.hidden });\n    this.params.scrollbarSize = getScrollbarSize(this.getRef('root') as HTMLElement);\n    this.itemSize = getItemSize(this.getRef('root') as HTMLElement, true);\n    this.addListeners();\n  }\n\n  private preStart(container: Element, params: TermConstructorParamsType) {\n    this.addEditLine(params.editLine || '');\n    this.ro.observe(container);\n    this.vl.scrollBottom();\n    this.lastLineFocus();\n    this.frameHandler = this.characterUpdater;\n    this.registerFrameHandler();\n    this.addKeyboardShortcutsManagerListeners();\n    this.keyboardShortcutsManager.activate();\n  }\n\n  private setParams(container: Element, params: TermConstructorParamsType) {\n    const { params: currentParams } = this;\n    this.lines = params.lines;\n    currentParams.size.width = (container as HTMLElement).offsetWidth;\n    currentParams.size.height = (container as HTMLElement).offsetHeight;\n    currentParams.header = params.header || currentParams.header;\n    currentParams.caret = params.caret || currentParams.caret;\n    currentParams.label = params.label || currentParams.label;\n    currentParams.delimiter = params.delimiter || currentParams.delimiter;\n  }\n\n  private characterUpdater = () => {\n    const { vl, itemSize } = this;\n    const newItemSize = getItemSize(this.getRef('root') as HTMLElement, true);\n    if (!compareItemSize(itemSize, newItemSize)) {\n      this.heightCache = [];\n      this.itemSize = newItemSize;\n      vl.updateViewport();\n    }\n  };\n\n  private itemGetter = (\n    index: number, params?: { container?: HTMLElement, ref?: ILine, append?: boolean },\n  ): ILine | null => {\n    const { lines, vl, params: { delimiter, label } } = this;\n    const { container, ref, append } = params || {};\n    const virtualItemsContainer = container || (vl\n      ? vl.getVirtualItemsContainer() as HTMLElement : undefined);\n    return virtualItemsContainer ? new Line(virtualItemsContainer, {\n      ref, append, delimiter, label, editable: false, value: lines[index], className: css.line,\n    }) : null;\n  };\n\n  private heightGetter = (index: number): number => {\n    const {\n      heightCache, itemSize, lines, params: { delimiter, label, size, scrollbarSize },\n    } = this;\n    if (isUndefined(heightCache[index])) {\n      heightCache[index] = Line.getHeight({\n        itemSize,\n        delimiter,\n        label,\n        value: lines[index],\n        width: size.width - scrollbarSize,\n      });\n    }\n    return heightCache[index];\n  };\n\n  private observeHandler = (entries: ResizeObserverEntry[]) => {\n    const { params: { size }, vl } = this;\n    const { width, height } = get(entries, '[0].contentRect');\n    if (size.width !== width) {\n      size.width = width;\n      size.height = height;\n      this.heightCache = [];\n      vl.updateViewport();\n      this.updateTermInfo();\n    } else if (size.height !== height) {\n      size.width = width;\n      size.height = height;\n      vl.updateViewport();\n      this.updateTermInfo();\n    }\n  };\n\n  private addListeners() {\n    const { editLine } = this;\n    const root = this.getRef('root') as HTMLElement;\n    if (root) root.addEventListener('click', this.clickHandler);\n    if (editLine) editLine.input?.addEventListener(CHANGE_EVENT_TYPE, this.updateTermInfo);\n  }\n\n  private removeListeners() {\n    const { editLine } = this;\n    const root = this.getRef('root') as HTMLElement;\n    if (root) root.removeEventListener('click', this.clickHandler);\n    if (editLine) editLine.input?.removeEventListener(CHANGE_EVENT_TYPE, this.updateTermInfo);\n  }\n\n  protected addEditLine(editLineParams: EditLineParamsType) {\n    const { vl, params: { delimiter, label, caret } } = this;\n    const generalItemsContainer = vl.getGeneralItemsContainer();\n    if (!generalItemsContainer) return;\n    this.editLine = new Line(generalItemsContainer, {\n      label,\n      delimiter,\n      caret,\n      className: [css.line, css.editLine].join(' '),\n      value: isArray(editLineParams) || isString(editLineParams)\n        ? editLineParams : editLineParams.value,\n      editable: true,\n      onSubmit: this.submitHandler,\n      onChange: this.changeHandler,\n      onUpdateCaretPosition: this.updateCaretPositionHandler,\n      secret: get(editLineParams as EditLineParamsType, 'secret') || false,\n    });\n    this.clearHistoryState();\n    this.addKeyDownHandler();\n  }\n\n  private clickHandler = (e: MouseEvent) => {\n    if (e.target === this.vl.getRef('root')) this.lastLineFocus();\n  };\n\n  private lastLineFocus() {\n    if (document.hasFocus() && this.editLine) {\n      this.editLine.focus();\n    }\n  }\n\n  private submitHandler = (\n    params: { value: string; formattedValue: ValueType; lockString: string },\n  ) => {\n    const { value, formattedValue, lockString } = params;\n    const { vl, editLine, listeners, history: { list } } = this;\n    const historyValue = value.substring(lockString.length);\n    if (historyValue && last(list) !== historyValue && !editLine?.secret) list.push(historyValue);\n    if (!editLine) return;\n    editLine.visible = false;\n    this.lines.push(formattedValue);\n    this.clearHistoryState();\n    this.history.list = list;\n    vl.length = this.lines.length;\n    vl.scrollBottom();\n    editLine.clear();\n    editLine.secret = false;\n    this.updateTermInfo();\n    this.submitTimeout = setTimeout(() => {\n      editLine.visible = true;\n      editLine.focus();\n      if (listeners[SUBMIT_EVENT_NAME]) {\n        const event = new ValueEvent(value, historyValue || undefined);\n        listeners[SUBMIT_EVENT_NAME].forEach((item) => item.handler(event));\n      }\n    }, 10);\n  };\n\n  private changeHandler = (value: string) => {\n    const { history: { list, index }, vl } = this;\n    if (list[index] !== value) this.history.stopHistory = true;\n    if (!value) this.history.stopHistory = false;\n    vl.scrollBottom();\n  };\n\n  private updateCaretPositionHandler = (position: number, caret?: ICaret) => {\n    const { listeners } = this;\n    this.updateTermInfo();\n    if (listeners[UPDATE_CARET_POSITION_EVENT_NAME]) {\n      const caretEvent = new CaretEvent(position, caret);\n      listeners[UPDATE_CARET_POSITION_EVENT_NAME].forEach((item) => item.handler(caretEvent));\n    }\n  };\n\n  private clearHistoryState() {\n    this.history = { list: [], index: -1, stopHistory: false };\n  }\n\n  private addKeyDownHandler() {\n    const { editLine } = this;\n    if (!editLine || !editLine.input) return;\n    editLine.input.addEventListener('keydown', this.lineKeydownHandler);\n  }\n\n  private removeKeyDownHandler() {\n    const { editLine } = this;\n    if (!editLine || !editLine.input) return;\n    editLine.input.removeEventListener('keydown', this.lineKeydownHandler);\n  }\n\n  private lineKeydownHandler = (e: KeyboardEvent) => {\n    const keyCode = Number(getKeyCode(e));\n    if (keyCode === UP_CODE) {\n      this.prevHistory(e);\n    } else if (keyCode === DOWN_CODE) {\n      this.nextHistory(e);\n    }\n  };\n\n  private prevHistory = (e: KeyboardEvent) => {\n    const { index, list } = this.history;\n    this.applyHistory(e, index < 0 ? list.length - 1 : Math.max(0, index - 1));\n  };\n\n  private nextHistory = (e: KeyboardEvent) => {\n    const { index, list } = this.history;\n    return index < 0\n      ? this.applyHistory(e, -1)\n      : this.applyHistory(e, index === list.length - 1 ? -1 : index + 1);\n  };\n\n  private applyHistory(e: KeyboardEvent, newIndex: number) {\n    const { history: { index, list, stopHistory }, editLine } = this;\n    if (!list.length || !editLine || stopHistory) return null;\n    if (index === newIndex) return e.stopPropagation();\n    this.history.index = newIndex;\n    editLine.value = newIndex >= 0 ? list[newIndex] || '' : '';\n    editLine.moveCaretToEnd();\n    return e.preventDefault();\n  }\n\n  private addKeyboardShortcutsManagerListeners() {\n    const { keyboardShortcutsManager } = this;\n    if (IS_MAC) {\n      keyboardShortcutsManager.addShortcut(CLEAR_ACTION_NAME, { code: K_CODE, meta: true });\n    } else {\n      keyboardShortcutsManager.addShortcut(CLEAR_ACTION_NAME, { code: K_CODE, ctrl: true });\n    }\n    keyboardShortcutsManager.addListener(CLEAR_ACTION_NAME, this.clearHandler);\n  }\n\n  private clearHandler = () => {\n    this.setLines([]);\n    this.updateTermInfo();\n  };\n\n  private actionHandler = (action: string) => {\n    const { listeners } = this;\n    if (listeners[ACTION_EVENT_NAME]) {\n      const event = new ActionEvent({ action });\n      listeners[ACTION_EVENT_NAME].forEach((item) => item.handler(event));\n    }\n  };\n\n  private registerListener<K extends keyof ITermEventMap>(\n    type: K, handler: (e: ITermEventMap[K]) => void, options?: EventListenerOptions,\n  ) {\n    const { editLine } = this;\n    if (editLine && INPUT_EVENT_LIST.includes(type)) {\n      editLine.input?.addEventListener(\n        type as keyof HTMLElementEventMap,\n        handler as (e: HTMLElementEventMap[keyof HTMLElementEventMap]) => void,\n        options,\n      );\n    }\n  }\n\n  private unregisterAllListeners() {\n    const { listeners } = this;\n    Object.keys(listeners).forEach((type: string) => {\n      if (INPUT_EVENT_LIST.includes(type)) {\n        listeners[type].forEach((item) => {\n          this.unregisterListener(type as keyof ITermEventMap, item.handler, item.options);\n        });\n      }\n    });\n  }\n\n  private unregisterListener<K extends keyof ITermEventMap>(\n    type: K, handler: (e: ITermEventMap[K]) => void, options?: EventListenerOptions,\n  ) {\n    const { editLine } = this;\n    if (editLine && INPUT_EVENT_LIST.includes(type)) {\n      editLine.input?.removeEventListener(\n        type as keyof HTMLElementEventMap,\n        handler as (e: HTMLElementEventMap[keyof HTMLElementEventMap]) => void,\n        options,\n      );\n    }\n  }\n\n  private setLines = (lines: ValueType[]) => {\n    const { vl } = this;\n    this.lines = lines;\n    vl.length = lines.length;\n    vl.clearCache();\n    this.updateTermInfo();\n  };\n\n  private getTermInfo(): ITermInfo {\n    const { params: { header } } = this;\n    return {\n      title: header,\n      elements: this.getTermInfoElements(),\n      label: this.getTermInfoLabel(),\n      caret: this.getTermInfoCaret(),\n      edit: this.getTermInfoEdit(),\n      lines: this.getTermInfoLines(),\n      history: this.history.list,\n      addEventListener: this.addEventListener,\n      removeEventListener: this.removeEventListener,\n    };\n  }\n\n  private getTermInfoElements(): TermInfoElementsType {\n    const { editLine } = this;\n    return {\n      root: this.getRef('content'),\n      edit: editLine?.getRef('content'),\n      title: this.getRef('header'),\n    };\n  }\n\n  private getTermInfoLabel(): TermInfoLabelType {\n    const { label, delimiter } = this.params;\n    return { label, delimiter, set: this.setLabel };\n  }\n\n  private getTermInfoCaret(): TermInfoCaretType {\n    const { editLine, itemSize } = this;\n    return {\n      position: editLine?.input?.caretPosition || 0,\n      offset: editLine?.caretOffset || { left: 0, top: 0 },\n      size: { width: itemSize.width, height: itemSize.height },\n      setCaretPosition: (position: number) => {\n        if (position < 0) {\n          editLine?.moveCaretToEnd();\n          this.updateTermInfo();\n        } else if (editLine && editLine.input && position >= 0) {\n          editLine.input.caretPosition = position;\n          this.updateTermInfo();\n        }\n      },\n    };\n  }\n\n  private getTermInfoEdit(): TermInfoEditType {\n    const { editLine } = this;\n    return {\n      value: BaseInput.getValueString(editLine?.value || ''),\n      parameterizedValue: editLine?.value || '',\n      write: this.write,\n      focus: () => editLine?.focus(),\n      blur: () => editLine?.blur(),\n      update: (params: EditLineParamsType) => {\n        if (!editLine) return;\n        if (isObject(params) && !isArray(params)) {\n          editLine.secret = Boolean(params.secret);\n          editLine.value = params.value;\n        } else {\n          editLine.value = params;\n        }\n        this.updateTermInfo();\n      },\n      endOffset: editLine?.endOffset || { left: 0, top: 0 },\n    };\n  }\n\n  private getTermInfoLines(): TermInfoLinesTypes {\n    const { lines } = this;\n    return {\n      list: lines.map((line: ValueType): string => BaseInput.getValueString(line)),\n      parameterizedList: lines,\n      update: this.setLines,\n    };\n  }\n\n  private updateTermInfo = () => {\n    this.pluginManager.updateTermInfo(this.getTermInfo());\n  };\n}\n\nexport default Term;\n"],"names":["lodashTemplate","template","css","guid"],"mappings":"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"}